[
{
	"uri": "https://myakimov.github.io/documaster-api-docs/",
	"title": "Documaster Noark5 API",
	"tags": [],
	"description": "",
	"content": "Noark5 Compliant API Documaster API You are at the home page of the documentation for the Documaster Noark5 Compliant API v1.0.\nStart here   "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/tags/",
	"title": "Overview",
	"tags": ["documentation", "tutorial"],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/general/",
	"title": "General",
	"tags": [],
	"description": "",
	"content": "Chapter 1 General Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/general/overview/",
	"title": "Overview",
	"tags": [],
	"description": "",
	"content": "Global site parameters On top of Hugo global configuration, Hugo-theme-learn lets you define the following parameters in your config.toml (here, values are default).\nNote that some of these parameters are explained in details in other sections of this documentation.\nSample JSON Payload Sample JSON Payload 2  { \u0026#34;results\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;moeteregistreringstype\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Møtebok\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;MP\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Møteprotokoll\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;SF\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Saksframlegg\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;D\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Vedtak i møtesak\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;VL\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Vedlegg til møtesak\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;SL\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Saksliste\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;MI\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Møteinnkalling\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;M\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Møtereferat\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;SP\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Saksprotokoll\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;N\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Notat til politisk utvalg\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;O\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Oversikt over deltakere, representanter og medlemmer i utvalg, råd og møter\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;moeteregistreringsstatus\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;administrativEnhet\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;AD1\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Administrative Unit 1\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;moetesakstype\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;RS\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Referatsak\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;PS\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Politisk sak\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Uregistrert sak\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;FO\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Interpellasjon\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;DS\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Delegert møtesak\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Merknad\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;merknadstype\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;IMER\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Intern merknad\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;MER\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Merknad\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;saksstatus\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Under behandling\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;P\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Unntatt prosesstyring\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Avsluttet\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Under behandling\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;R\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Opprettet av saksbehandler\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;S\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Avsluttet av saksbehandler\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Utgår\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;F\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Ferdig fra saksbehandler\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;mappetype\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;administrativEnhet\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;AD1\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Administrative Unit 1\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;korrespondanseparttype\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;IK\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Intern kopimottaker\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;IM\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Intern mottaker\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;EK\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Kopimottaker\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;GM\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Gruppemottaker\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;EM\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Mottaker\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;IA\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Intern avsender\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;EA\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Avsender\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;ekspederingskanal\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;S\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;SvarUt\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;E-post\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Utskrift\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;administrativEnhet\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;AD1\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Administrative Unit 1\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Plan\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;lovreferanse\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Plan\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;plantype\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Plan\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;planstatus\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Klasse\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Arkivdel\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Arkivdel\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Arkivdel\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;arkivdelstatus\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Aktiv periode\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;P\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Avsluttet periode\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Aktiv periode\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Uaktuelle mapper\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;O\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Overlappingsperiode\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Mappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Mappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;mappetype\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Mappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokumentversjon\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;variantformat\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;P\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Produksjonsformat\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;P\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Produksjonsformat\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Arkivformat\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumenttype\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;tilknyttetRegistreringSom\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;V\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Vedlegg\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;H\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Hoveddokument\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;M\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Another\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentstatus\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Dokumentet er under redigering\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Dokumentet er under redigering\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;F\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Dokumentet er ferdigstilt\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokumentflyt\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;flytStatus\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;S\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Sendt tilbake til saksbehandler med kommentarer\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;G\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Godkjent\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;I\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Ikke godkjent\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Moetemappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Moetemappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;mappetype\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Moetemappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;journalstatus\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;J\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Journalført\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Arkivert\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;R\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Reservert dokument\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;S\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Saksbehandler har registrert innkommet dokument\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Ekspedert\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Utgår\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;F\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Ferdigstilt fra saksbehandler\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;G\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Godkjent av leder\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;J\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Journalført\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;M\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Midlertidig registrering av innkommet dokument\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;journalposttype\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;S\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Saksframlegg\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Utgående dokument\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;X\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Organinternt dokument uten oppfølging\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;I\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Inngående dokument\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;N\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Organinternt dokument for oppfølging\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Basisregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Basisregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Avskrivning\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;avskrivningsmaate\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;TE\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Tatt til etterretning\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;BU\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Besvart med brev\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;BE\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Besvart med e-post\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;TO\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Tatt til orientering\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;TLF\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Besvart på telefon\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Arkiv\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;arkivstatus\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;O\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Opprettet\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Avsluttet\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;O\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Opprettet\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Arkiv\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] } ] }   { \u0026#34;results\u0026#34;: [] }     Activate search If not already present, add the follow lines in the same config.toml file.\n[outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Learn theme uses the last improvement available in hugo version 20+ to generate a json index file ready to be consumed by lunr.js javascript search engine.\n Hugo generate lunrjs index.json at the root of public folder. When you build the site with hugo server, hugo generates it internally and of course it doesn’t show up in the filesystem\n Mermaid The mermaid configuration parameters can also be set on a specific page. In this case, the global parameter would be overwritten by the local one.\n Example:\nMermaid is globally disabled. By default it won\u0026rsquo;t be loaded by any page.\nOn page \u0026ldquo;Architecture\u0026rdquo; you need a class diagram. You can set the mermaid parameters locally to only load mermaid on this page (not on the others).\n You also can disable mermaid for specific pages while globally enabled.\nHome Button Configuration If the disableLandingPage option is set to false, an Home button will appear on the left menu. It is an alternative for clicking on the logo. To edit the appearance, you will have to configure two parameters for the defined languages:\n[Lanugages] [Lanugages.en] ... landingPageURL = \u0026#34;/en\u0026#34; landingPageName = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-home\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Redirect to Home\u0026#34; ... [Lanugages.fr] ... landingPageURL = \u0026#34;/fr\u0026#34; landingPageName = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-home\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Accueil\u0026#34; ... If those params are not configured for a specific language, they will get their default values:\nlandingPageURL = \u0026#34;/\u0026#34; landingPageName = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-home\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Home\u0026#34; The home button is going to looks like this:\n"
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/common/",
	"title": "Common",
	"tags": [],
	"description": "",
	"content": "AbstractRegistrierung / AbstractRecord Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified    "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/",
	"title": "Data Model",
	"tags": [],
	"description": "",
	"content": "Chapter 2 Content Find out how to create and organize your content quickly and intuitively.\n"
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/operations/",
	"title": "Operations",
	"tags": [],
	"description": "",
	"content": "Chapter 2 Content Find out how to create and organize your content quickly and intuitively.\n"
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/general/authentication/",
	"title": "Authentication",
	"tags": [],
	"description": "",
	"content": "The following steps are here to help you initialize your new website. If you don\u0026rsquo;t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.\nCreate your project Hugo provides a new command to create a new website.\nhugo new site \u0026lt;new_project\u0026gt; Install the theme Install the Hugo-theme-learn theme by following this documentation\nThis theme\u0026rsquo;s repository is: https://github.com/matcornic/hugo-theme-learn.git\nAlternatively, you can download the theme as .zip file and extract it in the themes directory\nBasic configuration When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. You can also add the [outputs] section to enable the search functionality.\n# Change the default theme to be use when building the site with Hugo theme = \u0026#34;hugo-theme-learn\u0026#34; # For search functionality [outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Create your first chapter page Chapters are pages that contain other child pages. It has a special layout style and usually just contains a chapter name, the title and a brief abstract of the section.\n### Chapter 1 # Basics Discover what this Hugo theme is all about and the core concepts behind it. renders as\nHugo-theme-learn provides archetypes to create skeletons for your website. Begin by creating your first chapter page with the following command\nhugo new --kind chapter basics/_index.md By opening the given file, you should see the property chapter=true on top, meaning this page is a chapter.\nBy default all chapters and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata.\nCreate your first content pages Then, create content pages inside the previously created chapter. Here are two ways to create content in the chapter:\nhugo new basics/first-content.md hugo new basics/second-content/_index.md Feel free to edit thoses files by adding some sample content and replacing the title value in the beginning of the files.\nLaunching the website locally Launch by using the following command:\nhugo serve Go to http://localhost:1313\nYou should notice three things:\n You have a left-side Basics menu, containing two submenus with names equal to the title properties in the previously created files. The home page explains how to customize it by following the instructions. When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Neat!  Build the website When your site is ready to deploy, run the following command:\nhugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server.\nThis website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use Github pages\n "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/operations/transaction/",
	"title": "Transaction",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractrecord/basicrecord/",
	"title": "Basisregistrering / Basic Record",
	"tags": [],
	"description": "",
	"content": " AbstractRegistrierung / AbstractRecord Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified    Entity Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified   M004 string registreringsIdent x x   cw x x x    M020 string tittel x    x x x x    M025 string offentligTittel     x x x x    M021 string beskrivelse     x x x x    M024 string forfatter     x x x x    M300 string dokumentmedium x x dokumentmedium  x x x     M013 number journalaar x x   cw x x x    M014 number journalsekvensnummer x x   cw x x x    M015 number journalpostnummer x x   cw x x x     string journalansvarlig x x   x x x x • The name of the person responsible for this Journalpost (similar to M306 Saksmappe#saksansvarlig)    string journalansvarligBrukerIdent x x   x x x x • The user ID of the person responsible for this Journalpost as stored in journalansvarlig (similar to M306 Saksmappe#saksansvarligBrukerIdent)   M082 string journalposttype x  journalposttype  x x x     M053 string journalstatus x x journalstatus  x x x     M101 date registreringsDato x x   x x x x    M103 date dokumentetsDato     x x x x    M109 date forfallsdato     x x x x    M104 timestamp mottattDato     x x x x    M105 timestamp sendtDato     x x x x    M110 date offentlighetsvurdertDato     x x x x     boolean skjermKorrespondanseParterEInnsyn  x   x x x x When true, it indicates that Korrespondansepart objects of this Journalpost referenced by refKorrespondansepart will be screened in eInnsyn, even if the Journalpost is not effectively screened. When false or null, it indicates that Korrespondansepart objects will not be screened in eInnsyn, even if the Journalpost is effectively screened. Defaults to false.   M500 string skjerming   skjerming  x x x                   M711 object virksomhetsspesifikkeMetadata     x x       Reference Fields    Field Not null View Query Link Unlink Comment     refMappe c x x x x • references Saksmappe• exactly one of refMappe and refArkivdel is required   refArkivdel c x x x x • references Arkivdel• exactly one of refMappe and refArkivdel is required   refKorrespondansepart x  x x     refDokument   x x x    refPrimaerKlasse  x x x x • references a Klasse from the primary Klassifikasjonssystem of the Arkivdel   refSekundaerKlasse   x x x • references a Klasse from any Klassifikasjonssystem   refEksternId   x x     refDokumentflyt   x x     refNoekkelord   x x     refAvskrivning   x x     refTilknyttetAvskrivning   x x x    refMerknad   x x x    refNasjonalIdentifikator   x x     refKryssreferanseTilMappe   x x x refers to AbstraktMappe that the current AbstraktRegistrering cross references   refKryssreferanseFraMappe   x x x refers to AbstraktMappe that cross reference the current AbstraktRegistrering   refKryssreferanseTilRegistrering   x x x refers to AbstraktRegistrering that the current AbstraktRegistrering cross references   refKryssreferanseFraRegistrering   x x x refers to AbstraktRegistrering that cross reference the current AbstraktRegistrering    "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/",
	"title": "Entities",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractfolder/",
	"title": "Folders",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractrecord/registryentry/",
	"title": "Journalpost / Registry Entry",
	"tags": [],
	"description": "",
	"content": " flowchart LR A:::someclass -- B classDef someclass fill:#f96;  HTTP Java C# JSON  POST https://v2-34-0.local.documaster.tech:8083/rms/api/public/noark5/v1/transaction HTTP/1.1 Host: example.com Authorization: Bearer {{accessTokenAdmin}} Content-Type: application/json X-Documaster-Error-Response-Type: application/json { \u0026#34;actions\u0026#34;: [ { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;saksmappe-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;tittel\u0026#34;: \u0026#34;API:CaseFile3\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Second API CaseFile\u0026#34;, \u0026#34;mappeIdent\u0026#34;: \u0026#34;2021/45\u0026#34;, \u0026#34;administrativEnhet\u0026#34;: \u0026#34;AD1\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;saksmappe-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refArkivdel\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;688\u0026#34; }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;saksmappe-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refPrimaerKlasse\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;681\u0026#34; } ] }   package com.documaster.rms.noark5.pub.v1.api; import java.util.List; import java.util.Map; import com.documaster.rms.noark5.pub.common.util.LRUObjectCache; import com.documaster.rms.noark5.pub.v1.meta.EntityInfo; import com.documaster.rms.noark5.pub.v1.meta.Metamodel; import com.documaster.rms.noark5.pub.v1.model.BasePublicObject; import com.documaster.rms.noark5.pub.v1.n5ql.QueryTranslator; import no.dots.core.DotsAPI; import no.dots.core.DotsObject; import no.dots.core.DotsSession; import no.dots.noark5.model.Klass; import no.dots.noark5.model.KlassificationSystem; /** * A {@link Noark5PublicAPI} implementation that: * \u0026lt;ol\u0026gt; * \u0026lt;li\u0026gt;Specifically handles linking and unlinking * {@link com.documaster.rms.noark5.pub.v1.model.Klasse Klasse} to and from its parents (either another * {@link com.documaster.rms.noark5.pub.v1.model.Klasse Klasse} or a * {@link com.documaster.rms.noark5.pub.v1.model.Klassifikasjonssystem Klassifikasjonssystem}. * \u0026lt;p\u0026gt; * We need this because the internal model is aware of \u0026lt;b\u0026gt;4\u0026lt;/b\u0026gt; reference fields between {@link Klass} and * {@link KlassificationSystem}: * \u0026lt;ul\u0026gt; * \u0026lt;li\u0026gt;{@link Klass#refKlassificationSystemOfKlass};\u0026lt;/li\u0026gt; * \u0026lt;li\u0026gt;{@link Klass#refKlassificationSystemParent};\u0026lt;/li\u0026gt; * \u0026lt;li\u0026gt;{@link Klass#refParent};\u0026lt;/li\u0026gt; * \u0026lt;li\u0026gt;{@link Klass#refChildren};\u0026lt;/li\u0026gt; * \u0026lt;/ul\u0026gt; * whereas the public model is aware of \u0026lt;b\u0026gt;3\u0026lt;/b\u0026gt; reference fields between * {@link com.documaster.rms.noark5.pub.v1.model.Klasse Klasse} and * {@link com.documaster.rms.noark5.pub.v1.model.Klassifikasjonssystem Klassifikasjonssystem}: * \u0026lt;ul\u0026gt; * \u0026lt;li\u0026gt;{@link com.documaster.rms.noark5.pub.v1.model.Klasse#refKlassifikasjonssystem * Klasse#refKlassifikasjonssystem};\u0026lt;/li\u0026gt; * \u0026lt;li\u0026gt;{@link com.documaster.rms.noark5.pub.v1.model.Klasse#refBarnKlasse Klasse#refBarnKlasse};\u0026lt;/li\u0026gt; * \u0026lt;li\u0026gt;{@link com.documaster.rms.noark5.pub.v1.model.Klasse#refForelderKlasse Klasse#refForelderKlasse}.\u0026lt;/li\u0026gt; * \u0026lt;/ul\u0026gt; * Since {@link Klass#refKlassificationSystemParent} is not exposed in the public model in any way, we need to set/unset * the values of this reference field as part of this API. * \u0026lt;/p\u0026gt; * \u0026lt;/li\u0026gt; * \u0026lt;li\u0026gt;Adds support for managing BSM values via {@link BsmAPI}.\u0026lt;/li\u0026gt; * \u0026lt;/ol\u0026gt; */ public class KlasseAPI extends BaseAPI { private BsmAPI bsmAPI; KlasseAPI( DotsSession session, Metamodel metamodel, ObjectCache orphanCache, LRUObjectCache objectCache, QueryTranslator queryTranslator, BsmAPI bsmAPI) { super(session, metamodel, orphanCache, objectCache, queryTranslator); this.bsmAPI = bsmAPI; } @Override public Long save(String type, Long id, Map\u0026lt;String, Object\u0026gt; fields, Integer controlVersion) throws Exception { return bsmAPI.save(type, id, fields, controlVersion); } @Override protected BasePublicObject convert(EntityInfo entityInfo, DotsObject dotsObject) throws Exception { return bsmAPI.convert(entityInfo, dotsObject); } @Override public void link(String type, Long id, String refFieldName, List\u0026lt;Long\u0026gt; linkToIds) { Klass klass = (Klass) getUnderlyingObject(type, id, true); // Remove the KS parent link if a parent Klass will be added. \t// This needs to happen before linking the parent Klass, because the system \t// does not allow an object to have more than one parent simultaneously. \tif (\u0026#34;refForelderKlasse\u0026#34;.equals(refFieldName) \u0026amp;\u0026amp; unlinkParentKS(api, klass)) { orphanCache.add(klass); } // Remove the KS parent link from child classes if a parent Klass will be added for them. \t// This needs to happen before linking the parent Klass, because the system \t// does not allow an object to have more than one parent simultaneously. \tif (\u0026#34;refBarnKlasse\u0026#34;.equals(refFieldName)) { for (Long childKlassId : linkToIds) { Klass childKlass = Klass.class.cast(getUnderlyingObject(type, childKlassId, true)); if (unlinkParentKS(api, childKlass)) { orphanCache.add(childKlass); } } } super.link(type, id, refFieldName, linkToIds); // If no Klass parent exists, specify the linked KS as parent. \tif (\u0026#34;refKlassifikasjonssystem\u0026#34;.equals(refFieldName) \u0026amp;\u0026amp; api.countLinks(klass, \u0026#34;refParent\u0026#34;) == 0 \u0026amp;\u0026amp; specifyLinkedKSAsParentKS(api, klass)) { orphanCache.remove(Klass.class, klass.getId()); } } @Override public void unlink(String type, Long id, String refFieldName, List\u0026lt;Long\u0026gt; unlinkFromIds) { super.unlink(type, id, refFieldName, unlinkFromIds); if (!\u0026#34;refKlassifikasjonssystem\u0026#34;.equals(refFieldName) \u0026amp;\u0026amp; !\u0026#34;refForelderKlasse\u0026#34;.equals(refFieldName) \u0026amp;\u0026amp; !\u0026#34;refBarnKlasse\u0026#34;.equals(refFieldName)) { return; } Klass klass = (Klass) getUnderlyingObject(type, id, true); // The user has unlinked the Klass from the KS, so we need to unlink the parent KS too \tif (\u0026#34;refKlassifikasjonssystem\u0026#34;.equals(refFieldName) \u0026amp;\u0026amp; unlinkParentKS(api, klass)) { orphanCache.add(klass); } // Specify the linked KS as parent KS in case the parent Klass is dropped \tif (\u0026#34;refForelderKlasse\u0026#34;.equals(refFieldName) \u0026amp;\u0026amp; specifyLinkedKSAsParentKS(api, klass)) { orphanCache.remove(Klass.class, klass.getId()); } // Specify the linked KS as parent KS for child classes which have been unlinked \tif (\u0026#34;refBarnKlasse\u0026#34;.equals(refFieldName)) { for (Long childKlassId : unlinkFromIds) { Klass childKlass = Klass.class.cast(getUnderlyingObject(type, childKlassId, true)); if (specifyLinkedKSAsParentKS(api, childKlass)) { orphanCache.remove(Klass.class, childKlassId); } } } } /** * Unlink a parent {@link KlassificationSystem} ({@link Klass#refKlassificationSystemParent)} from the specified * {@link Klass}, if any. * * @param api * A {@link DotsAPI} * @param klass * The {@link Klass} to be unlinked from its parent {@link KlassificationSystem} * @return \u0026lt;b\u0026gt;true\u0026lt;/b\u0026gt; if there was a parent to unlink from; \u0026lt;b\u0026gt;false\u0026lt;/b\u0026gt; otherwise */ static boolean unlinkParentKS(DotsAPI api, Klass klass) { KlassificationSystem parentKs = api.getOne(klass, \u0026#34;refKlassificationSystemParent\u0026#34;, KlassificationSystem.class); if (parentKs != null) { parentKs = api.getLocked(KlassificationSystem.class, parentKs.getId()); api.unlink(klass, \u0026#34;refKlassificationSystemParent\u0026#34;, parentKs); return true; } return false; } /** * Link the {@link Klass}\u0026#39; associated {@link KlassificationSystem} ({@link Klass#refKlassificationSystemOfKlass}) as * its parent {@link Klass#refKlassificationSystemParent}, if any. * * @param api * A {@link DotsAPI} * @param klass * The {@link Klass} to be linked to a parent {@link KlassificationSystem} * @return \u0026lt;b\u0026gt;true\u0026lt;/b\u0026gt; if there was an associated {@link KlassificationSystem} to link to; \u0026lt;b\u0026gt;false\u0026lt;/b\u0026gt; otherwise */ static boolean specifyLinkedKSAsParentKS(DotsAPI api, Klass klass) { KlassificationSystem linkedKS = api.getOne(klass, \u0026#34;refKlassificationSystemOfKlass\u0026#34;, KlassificationSystem.class); KlassificationSystem parentKS = api.getOne(klass, \u0026#34;refKlassificationSystemParent\u0026#34;, KlassificationSystem.class); if (linkedKS != null) { linkedKS = api.getLocked(KlassificationSystem.class, linkedKS.getId()); if (parentKS != null) { if (!parentKS.getId().equals(linkedKS.getId())) { parentKS = api.getLocked(KlassificationSystem.class, parentKS.getId()); api.unlink(klass, \u0026#34;refKlassificationSystemParent\u0026#34;, parentKS); api.link(klass, \u0026#34;refKlassificationSystemParent\u0026#34;, linkedKS); } } else { api.link(klass, \u0026#34;refKlassificationSystemParent\u0026#34;, linkedKS); } return true; } return false; } }   using System; using System.Collections.Generic; using System.IO; using System.Linq; using CommandLine; using Documaster.WebApi.Client.Noark5; using Documaster.WebApi.Client.Noark5.Client; using Documaster.WebApi.Client.Noark5.NoarkEntities; using Documaster.WebApi.Client.IDP; using Documaster.WebApi.Client.IDP.Oauth2; namespace NoarkWsClientSample { class Program { private static NoarkClient client; private static Oauth2HttpClient idpClient; static string testDoc; public static void Main(string[] args) { var options = ParserCommandLineArguments(args); InitializeSample(options); JournalingSample(); ArchiveSample(); MeetingAndBoardHandlingDataSample(); BusinessSpecificMetadataSample(); CodeListsSample(); } private static Options ParserCommandLineArguments(string[] args) { Options opts = null; var parseResult = Parser.Default .ParseArguments\u0026lt;Options\u0026gt;(args) .WithParsed(options =\u0026gt; opts = options); if (parseResult.Tag == ParserResultType.NotParsed) { throw new Exception(\u0026#34;Failed to parse command line arguments!\u0026#34;); } return opts; } private static void InitializeSample(Options opts) { /* * Using the Noark 5 web services requires providing a valid access token. * The way this token is obtained depends on the system implementing the services. * This sample code obtains the token from the Documaster\u0026#39;s identity provider service * with the help of a designated Documaster IDP client. * If the Noark client is used in the context of an application that has access to a web browser, * we strongly recommend choosing the Oauth2 Authorization Code Grant Flow supported for obtaining * access tokens. */ //Initialize an IDP client and request an authorization token  InitIdpClient(opts); PasswordGrantTypeParams passwordGrantTypeParams = new PasswordGrantTypeParams( opts.ClientId, opts.ClientSecret, opts.Username, opts.Password, OpenIDConnectScope.OPENID); var accessToken = idpClient.GetTokenWithPasswordGrantType(passwordGrantTypeParams).AccessToken; //Initialize a Noark client  InitClient(opts); client.AuthToken = accessToken; //Notice that it is also possible to initialize а ssl-based Noark client without providing  //client certificate:  //InitClientWithoutClientCertificate(opts);  testDoc = opts.TestDoc; } private static void InitIdpClient(Options options) { idpClient = new Oauth2HttpClient(options.IdpServerAddress, true); } private static void InitClient(Options options) { client = new NoarkClient(options.ServerAddress, options.CertificatePath, options.CertificatePass, true); } private static void InitClientWithoutClientCertificate(Options options) { client = new NoarkClient(options.ServerAddress, true); } private static void JournalingSample() { Console.WriteLine($\u0026#34;Journaling example {Environment.NewLine}\u0026#34;); //Create a new Arkiv with an Arkivskaper  //When new objects are initialized, a temporary Id is assigned to them.  var newArkivskaper = new Arkivskaper(\u0026#34;B7-23-W5\u0026#34;, \u0026#34;John Smith\u0026#34;); var newArkiv = new Arkiv(\u0026#34;Arkiv\u0026#34;); var transactionResponse = client.Transaction() .Save(newArkiv) .Save(newArkivskaper) .Link(newArkiv.LinkArkivskaper(newArkivskaper)) .Commit(); //When the transaction is committed, the transaction response contains a map with saved objects.  //One can access the saved Arkiv by providing its temporary Id as a key to the map.  //Notice that arkiv.Id is the permanent Id of the Arkiv.  var arkiv = transactionResponse.Saved[newArkiv.Id] as Arkiv; Console.WriteLine( $\u0026#34;Created Arkiv: Id={arkiv.Id}, Tittel={arkiv.Tittel}, OpprettetDato={arkiv.OpprettetDato}\u0026#34;); //Update the description of the Arkiv and create a new Arkivdel in it  //Create a new Klassifikasjonssystem with one Klasse  //Set the new Klassifikasjonssystem as the primary Klassifikasjonssystem for the Arkivdel  arkiv.Beskrivelse = \u0026#34;Barnehage Arkiv\u0026#34;; var newArkivdel = new Arkivdel(\u0026#34;2007/8\u0026#34;); var newKlassifikasjonssystem = new Klassifikasjonssystem(\u0026#34;Barnehage\u0026#34;); var newKlasse = new Klasse(\u0026#34;01\u0026#34;, \u0026#34;Tilbud\u0026#34;); transactionResponse = client.Transaction() .Save(arkiv) .Save(newArkivdel) .Link(newArkivdel.LinkArkiv(arkiv)) .Save(newKlassifikasjonssystem) .Link(newArkivdel.LinkPrimaerKlassifikasjonssystem(newKlassifikasjonssystem)) .Save(newKlasse) .Link(newKlasse.LinkKlassifikasjonssystem(newKlassifikasjonssystem)) .Commit(); arkiv = transactionResponse.Saved[arkiv.Id] as Arkiv; Console.WriteLine($\u0026#34;Updated Arkiv: Id={arkiv.Id}, Beskrivelse={arkiv.Beskrivelse}\u0026#34;); var arkivdel = transactionResponse.Saved[newArkivdel.Id] as Arkivdel; Console.WriteLine($\u0026#34;Created Arkivdel: Id={arkivdel.Id}, Tittel={arkivdel.Tittel}\u0026#34;); var klassifikasjonssystemId = transactionResponse.Saved[newKlassifikasjonssystem.Id].Id; var klasseId = transactionResponse.Saved[newKlasse.Id].Id; //Create a screening code  Skjerming newSkjerming = new Skjerming(Guid.NewGuid().ToString(), Guid.NewGuid().ToString(), \u0026#34;Description\u0026#34;, \u0026#34;Authority\u0026#34;); Skjerming skjerming = client.PutCodeListValue(newSkjerming); //Screen the Arkivdel  arkivdel.Skjerming = skjerming; transactionResponse = client.Transaction() .Save(arkivdel) .Commit(); //Find the Arkivdel by id  //By default the service will return null values for all screened fields of screened objects  //To see the values of screened fields call SetPublicUse(false)  var queryResults = client.Query\u0026lt;Arkivdel\u0026gt;(\u0026#34;id=@arkivdelId\u0026#34;, 10) .AddQueryParam(\u0026#34;@arkivdelId\u0026#34;, arkivdel.Id) .Execute(); Console.WriteLine($\u0026#34;Found {queryResults.Results.Count()} Arkivdel object(s) with Id {arkivdel.Id}\u0026#34;); //Print a screened field:  arkivdel = queryResults.Results.First(); Console.WriteLine($\u0026#34;Tittel of Arkivdel is masked: {arkivdel.Tittel}\u0026#34;); //For convenience, objects in query and transaction responses contain the id\u0026#39;s of many-to-one reference fields  Console.WriteLine($\u0026#34;Arkivdel.RefArkiv: {arkivdel.RefArkiv}\u0026#34;); Console.WriteLine($\u0026#34;Arkivdel.RefPrimaerKlassifikasjonssystem: {arkivdel.RefPrimaerKlassifikasjonssystem}\u0026#34;); //Create two other Klassifikasjonssystem objects and link them to the Arkivdel as secondary Klassifikasjonssystem  var sekundaerKlassifikasjonssystemSkole = new Klassifikasjonssystem(\u0026#34;Skole\u0026#34;); var klasseInSekundaerKlassifikasjonssystemSkole = new Klasse(\u0026#34;07\u0026#34;, \u0026#34;Report\u0026#34;); var sekundaerKlassifikasjonssystem2 = new Klassifikasjonssystem(\u0026#34;EOP\u0026#34;); transactionResponse = client.Transaction() .Save(sekundaerKlassifikasjonssystemSkole) .Save(klasseInSekundaerKlassifikasjonssystemSkole) .Link(sekundaerKlassifikasjonssystemSkole.LinkKlasse(klasseInSekundaerKlassifikasjonssystemSkole)) .Save(sekundaerKlassifikasjonssystem2) .Link(arkivdel.LinkSekundaerKlassifikasjonssystem(sekundaerKlassifikasjonssystemSkole, sekundaerKlassifikasjonssystem2)) .Commit(); //We need the id of the saved Klasse for the next transactions  var sekundaerKlasseId = transactionResponse.Saved[klasseInSekundaerKlassifikasjonssystemSkole.Id].Id; //Create a new administrativEnhet value  AdministrativEnhet newAdministrativEnhet = new AdministrativEnhet(Guid.NewGuid().ToString(), Guid.NewGuid().ToString()); AdministrativEnhet administrativEnhet = client.PutCodeListValue(newAdministrativEnhet); //Create a new Saksmappe in the Arkivdel  //The new Saksmappe needs to have a Klasse in the primary Klassifikasjonssystem of the Arkivdel  //Also link the Saksmappe to a secondary Klasse  var newSaksmappe = new Saksmappe(\u0026#34;Tilbud (Smith, John)\u0026#34;, administrativEnhet); var newSakspart = new Sakspart(\u0026#34;Alice\u0026#34;, \u0026#34;internal\u0026#34;); var savedObjects = client.Transaction() .Save(newSaksmappe) .Link(newSaksmappe.LinkArkivdel(arkivdel)) .Link(newSaksmappe.LinkPrimaerKlasse(klasseId)) .Link(newSaksmappe.LinkSekundaerKlasse(sekundaerKlasseId)) .Save(newSakspart) .Link(newSaksmappe.LinkSakspart(newSakspart)) .Commit() .Saved; var saksmappe = savedObjects[newSaksmappe.Id] as Saksmappe; Console.WriteLine($\u0026#34;Created Saksmappe: Id={saksmappe.Id}, Saksdato: {saksmappe.Saksdato}\u0026#34;); //Create another Klasse  //Unlink the Saksmappe from its Klasse and link it to the new Klasse  var anotherKlasse = new Klasse(\u0026#34;02\u0026#34;, \u0026#34;Klage\u0026#34;); client.Transaction() .Save(anotherKlasse) .Link(anotherKlasse.LinkKlassifikasjonssystem(klassifikasjonssystemId)) .Unlink(saksmappe.UnlinkPrimaerKlasse(klasseId)) .Link(saksmappe.LinkPrimaerKlasse(anotherKlasse)) .Commit(); Console.WriteLine( $\u0026#34;Unlinked Saksmappe wiht Id {saksmappe.Id} from Klasse \u0026#39;{newKlasse.Tittel}\u0026#39; and linked it to Klasse \u0026#39;{anotherKlasse.Tittel}\u0026#39;\u0026#34;); //Find all available codes for journalstatus in Journalpost  var journalstatusCodeList = client.CodeLists(type: \u0026#34;Journalpost\u0026#34;, field: \u0026#34;journalstatus\u0026#34;).First(); Console.WriteLine($\u0026#34;CodeList list for {journalstatusCodeList.Type}.{journalstatusCodeList.Field}:\u0026#34;); foreach (var code in journalstatusCodeList.Values) { Console.WriteLine($\u0026#34; Code={code.Code}, Name={code.Name}\u0026#34;); } //Create a new Journalpost in the Saksmappe  //Create an EksternId object and link it to the Journalpost  //Create a new Korrespondansepart and link it to the Journalpost  //Create a Noekkelord (keyword) object and link it to the Journalpost  var newJournalpost = new Journalpost(\u0026#34;Tilbud (Smith, John, Godkjent)\u0026#34;, Journalposttype.UTGAAENDE_DOKUMENT) { Journalaar = 2007, Journalsekvensnummer = 46 }; var newEksternId = new EksternId(\u0026#34;External System\u0026#34;, Guid.NewGuid().ToString()); var newKorrespondansepart = new Korrespondansepart(Korrespondanseparttype.INTERN_MOTTAKER, \u0026#34;John Smith\u0026#34;); var newNoekkelord = new Noekkelord(\u0026#34;keyword\u0026#34;); savedObjects = client.Transaction() .Save(newJournalpost) .Link(newJournalpost.LinkMappe(saksmappe)) .Save(newEksternId) .Link(newJournalpost.LinkEksternId(newEksternId)) .Save(newKorrespondansepart) .Link(newJournalpost.LinkKorrespondansepart(newKorrespondansepart)) .Save(newNoekkelord) .Link(newNoekkelord.LinkRegistrering(newJournalpost)) .Commit() .Saved; var journalPost = savedObjects[newJournalpost.Id] as Journalpost; Console.WriteLine( $\u0026#34;Created Journalpost: Id={journalPost.Id}, Tittel={journalPost.Tittel}, Journalstatus={journalPost.Journalstatus.Code}\u0026#34;); //Find the Journalpost by the eksternID value  var journalpstQueryResults = client.Query\u0026lt;Journalpost\u0026gt;(\u0026#34;refEksternId.eksternID=@eksternId\u0026#34;, 10) .AddQueryParam(\u0026#34;@eksternId\u0026#34;, newEksternId.EksternID) .Execute(); Console.WriteLine( $\u0026#34;Found {journalpstQueryResults.Results.Count()} Journalpost objects with eksternID {newEksternId.EksternID}\u0026#34;); //Upload a file  Dokumentfil dokumentfil; using (var inputStream = File.OpenRead(testDoc)) { dokumentfil = client.Upload(inputStream, \u0026#34;godkjenning.pdf\u0026#34;); } Console.WriteLine($\u0026#34;Uploaded file {testDoc}\u0026#34;); //Create a new value for Dokumenttype  Dokumenttype newDokumenttype = new Dokumenttype(Guid.NewGuid().ToString(), Guid.NewGuid().ToString()); Dokumenttype dokumenttype = client.PutCodeListValue(newDokumenttype); //Create a new Dokument and Dokumentversjon using the uploaded file  var newDokument = new Dokument(dokumenttype, \u0026#34;Tilbud (Smith, John, Godkjent)\u0026#34;, TilknyttetRegistreringSom.HOVEDDOKUMENT); var newDokumentversjon = new Dokumentversjon(Variantformat.PRODUKSJONSFORMAT, \u0026#34;.pdf\u0026#34;, dokumentfil); savedObjects = client.Transaction() .Save(newDokument) .Link(newDokument.LinkRegistrering(journalPost)) .Save(newDokumentversjon) .Link(newDokumentversjon.LinkDokument(newDokument)) .Commit() .Saved; var dokumentversjon = savedObjects[newDokumentversjon.Id] as Dokumentversjon; Console.WriteLine( $\u0026#34;Created Dokumentversjon: Id={dokumentversjon.Id}, Versjonsnummer: {dokumentversjon.Versjonsnummer}, Filstoerrelse: {dokumentversjon.Filstoerrelse}\u0026#34;); //Download the Dokumentversjon file  var downloadPath = Path.GetTempFileName(); using (var outputStream = File.Create(downloadPath)) { client.Download(dokumentversjon.Dokumentfil, outputStream); } Console.WriteLine($\u0026#34;Downloaded file {downloadPath}\u0026#34;); //Find all dokument objects in a Saksmappe called \u0026#34;Tilbud (Smith, John)\u0026#34;  //Results should be ordered by creation date in descending order  var queryResponse = client.Query\u0026lt;Dokument\u0026gt;(\u0026#34;refRegistrering.refMappe.tittel=@saksmappeTittel\u0026#34;, 50) .AddQueryParam(\u0026#34;@saksmappeTittel\u0026#34;, \u0026#34;Tilbud (Smith, John)\u0026#34;) .AddSortOrder(\u0026#34;opprettetDato\u0026#34;, Order.Descending) .Execute(); Console.WriteLine( $\u0026#34;Query returned {queryResponse.Results.Count()} Dokument objects in Saksmappe objects called \u0026#39;Tilbud (Smith, John)\u0026#39;\u0026#34;); Console.WriteLine($\u0026#34;More results available: {queryResponse.HasMore}\u0026#34;); //Delete the DokumentVersjon by id  client.Transaction().Delete\u0026lt;Dokumentversjon\u0026gt;(dokumentversjon.Id).Commit(); Console.WriteLine($\u0026#34;Deleted Dokumentversjon with Id {dokumentversjon.Id}\u0026#34;); Console.WriteLine(); } private static void ArchiveSample() { Console.WriteLine($\u0026#34;Archive example {Environment.NewLine}\u0026#34;); //Create a new Arkiv with an Arkivskaper  //Create a new Arkivdel in the Arkiv  var newArkivskaper = new Arkivskaper(\u0026#34;B7-23-W5\u0026#34;, \u0026#34;John Smith\u0026#34;); var newArkiv = new Arkiv(\u0026#34;Arkiv\u0026#34;); var newArkivdel = new Arkivdel(\u0026#34;2007/8\u0026#34;); var transactionResponse = client.Transaction() .Save(newArkiv) .Save(newArkivskaper) .Save(newArkivdel) .Link(newArkiv.LinkArkivskaper(newArkivskaper)) .Link(newArkivdel.LinkArkiv(newArkiv)) .Commit(); var arkiv = transactionResponse.Saved[newArkiv.Id] as Arkiv; Console.WriteLine( $\u0026#34;Created Arkiv: Id={arkiv.Id}, Arkivstatus={arkiv.Arkivstatus.Code}, OpprettetDato={arkiv.OpprettetDato}\u0026#34;); var arkivdel = transactionResponse.Saved[newArkivdel.Id] as Arkivdel; Console.WriteLine($\u0026#34;Created Arkivdel: Id={arkivdel.Id}, Arkivdelstatus={arkivdel.Arkivdelstatus.Code}\u0026#34;); //Get all available values for the Mappetype code list  var mappetypeList = client.CodeLists(\u0026#34;Mappe\u0026#34;, \u0026#34;mappetype\u0026#34;).First(); if (mappetypeList.Values.Count == 0) { Console.WriteLine( \u0026#34;Can not create an instance of Mappe because there are not available values in the Mappetype code list!\u0026#34;); return; } var mappetypeCode = mappetypeList.Values.First().Code; //Create a new Mappe  var newMappe = new Mappe(\u0026#34;Barnehage Tilbud\u0026#34;) { Beskrivelse = \u0026#34;Mappe Beskrivelse\u0026#34;, Mappetype = new Mappetype(mappetypeCode) }; transactionResponse = client.Transaction() .Save(newMappe) .Link(newMappe.LinkArkivdel(arkivdel)) .Commit(); var mappe = transactionResponse.Saved[newMappe.Id] as Mappe; Console.WriteLine($\u0026#34;Created Mappe: Id={mappe.Id}, Tittel: {mappe.Tittel}\u0026#34;); //Create a child Mappe in the Mappe  var newBarnMappe = new Mappe(\u0026#34;Tilbud (Smith, John)\u0026#34;); var savedObjects = client.Transaction() .Save(newBarnMappe) .Link(newBarnMappe.LinkForelderMappe(mappe)) .Commit() .Saved; var barnMappe = savedObjects[newBarnMappe.Id] as Mappe; Console.WriteLine( $\u0026#34;Created a new Mappe (Id={barnMappe.Id}, Tittel={barnMappe.Tittel}) in Mappe with Id {mappe.Id}\u0026#34;); //Find all children of the Mappe  var queryResults = client.Query\u0026lt;Mappe\u0026gt;(\u0026#34;refForelderMappe.id=@forelderMappeId\u0026#34;, 10) .AddQueryParam(\u0026#34;@forelderMappeId\u0026#34;, mappe.Id) .Execute(); Console.WriteLine($\u0026#34;Found {queryResults.Results.Count()} Mappe objects in Mappe with Id {mappe.Id}\u0026#34;); //Create a new Basisregistrering in the child Mappe  //Link one Korrespondansepart to the Basisregistrering  var newBasisregistrering = new Basisregistrering(\u0026#34;Tilbud (Smith, John, Godkjent)\u0026#34;); var newKorrespondansepart = new Korrespondansepart(Korrespondanseparttype.MOTTAKER, \u0026#34;John Smith\u0026#34;); savedObjects = client.Transaction() .Save(newBasisregistrering) .Save(newKorrespondansepart) .Link(newBasisregistrering.LinkMappe(barnMappe)) .Link(newBasisregistrering.LinkKorrespondansepart(newKorrespondansepart)) .Commit() .Saved; var basisregistrering = savedObjects[newBasisregistrering.Id] as Basisregistrering; Console.WriteLine( $\u0026#34;Created Basisregistrering: Id={basisregistrering.Id}, Tittel={basisregistrering.Tittel}\u0026#34;); //Upload a file  Dokumentfil dokumentfil; using (var inputStream = File.OpenRead(testDoc)) { dokumentfil = client.Upload(inputStream, \u0026#34;godkjenning.pdf\u0026#34;); } Console.WriteLine($\u0026#34;Uploaded file {testDoc}\u0026#34;); //Get available values for the Dokumenttype code list  var dokumenttypeList = client.CodeLists(\u0026#34;Dokument\u0026#34;, \u0026#34;dokumenttype\u0026#34;).First(); if (dokumenttypeList.Values.Count == 0) { Console.WriteLine( \u0026#34;Can not create an instance of Dokument because there are not available values in the Dokumenttype code list!\u0026#34;); return; } var dokumenttypeCode = dokumenttypeList.Values.First().Code; //Create a new Dokument and Dokumentversjon using the uploaded file  //Link the Dokument to the Basisregistrering  var newDokument = new Dokument(new Dokumenttype(dokumenttypeCode), \u0026#34;Tilbud (Smith, John, Godkjent)\u0026#34;, TilknyttetRegistreringSom.HOVEDDOKUMENT); var newDokumentversjon = new Dokumentversjon(Variantformat.PRODUKSJONSFORMAT, \u0026#34;.pdf\u0026#34;, dokumentfil); savedObjects = client.Transaction() .Save(newDokument) .Link(newDokument.LinkRegistrering(basisregistrering)) .Save(newDokumentversjon) .Link(newDokumentversjon.LinkDokument(newDokument)) .Commit() .Saved; var dokumentversjon = savedObjects[newDokumentversjon.Id] as Dokumentversjon; Console.WriteLine( $\u0026#34;Created Dokumentversjon: Id={dokumentversjon.Id}, Versjonsnummer: {dokumentversjon.Versjonsnummer}, Filstoerrelse: {dokumentversjon.Filstoerrelse}\u0026#34;); } private static void MeetingAndBoardHandlingDataSample() { Console.WriteLine($\u0026#34;Meeting and board handling data example {Environment.NewLine}\u0026#34;); //Create a new Arkiv with an Arkivskaper  //Create a new Arkivdel in the Arkiv  var newArkivskaper = new Arkivskaper(\u0026#34;B7-23-W5\u0026#34;, \u0026#34;John Smith\u0026#34;); var newArkiv = new Arkiv(\u0026#34;Arkiv\u0026#34;); var newArkivdel = new Arkivdel(\u0026#34;2007/8\u0026#34;); var transactionResponse = client.Transaction() .Save(newArkiv) .Save(newArkivskaper) .Save(newArkivdel) .Link(newArkiv.LinkArkivskaper(newArkivskaper)) .Link(newArkivdel.LinkArkiv(newArkiv)) .Commit(); var arkiv = transactionResponse.Saved[newArkiv.Id] as Arkiv; Console.WriteLine( $\u0026#34;Created Arkiv: Id={arkiv.Id}, Arkivstatus={arkiv.Arkivstatus.Code}, OpprettetDato={arkiv.OpprettetDato}\u0026#34;); var arkivdel = transactionResponse.Saved[newArkivdel.Id] as Arkivdel; Console.WriteLine($\u0026#34;Created Arkivdel: Id={arkivdel.Id}, Arkivdelstatus={arkivdel.Arkivdelstatus.Code}\u0026#34;); //Create a new Moetemappe and Moetedeltaker  Moetemappe newMappe = new Moetemappe(\u0026#34;Moetemappe Tittel\u0026#34;, \u0026#34;Moetenummer\u0026#34;, \u0026#34;Utvalg\u0026#34;); Moetedeltaker moetedeltaker = new Moetedeltaker(\u0026#34;Moetedeltaker Navn\u0026#34;); transactionResponse = client.Transaction() .Save(newMappe) .Link(newMappe.LinkArkivdel(arkivdel)) .Save(moetedeltaker) .Link(moetedeltaker.LinkMappe(newMappe)) .Commit(); var mappe = transactionResponse.Saved[newMappe.Id] as Moetemappe; Console.WriteLine($\u0026#34;Created Mappe: Id={mappe.Id}, Tittel={mappe.Tittel}\u0026#34;); Console.WriteLine($\u0026#34;Created Moetedeltaker: Navn={moetedeltaker.Navn}\u0026#34;); //Create a new AdministrativEnhett code list value  AdministrativEnhet newAdministrativEnhet = new AdministrativEnhet(Guid.NewGuid().ToString(), Guid.NewGuid().ToString()); AdministrativEnhet administrativEnhet = client.PutCodeListValue(newAdministrativEnhet); //Create a new Moeteregistrering  Moeteregistrering newMoeteregistrering = new Moeteregistrering(\u0026#34;Tittel\u0026#34;, \u0026#34;Saksbehandler\u0026#34;, administrativEnhet, Moeteregistreringstype.MOETEINNKALLING); transactionResponse = client.Transaction() .Save(newMoeteregistrering) .Link(newMoeteregistrering.LinkMappe(mappe)) .Commit(); var moeteregistrering = transactionResponse.Saved[newMoeteregistrering.Id] as Moeteregistrering; Console.WriteLine( $\u0026#34;Created Moeteregistrering: Id={moeteregistrering.Id}, Tittel={moeteregistrering.Tittel}\u0026#34;); ; //Upload a file  Dokumentfil dokumentfil; using (var inputStream = File.OpenRead(testDoc)) { dokumentfil = client.Upload(inputStream, \u0026#34;godkjenning.pdf\u0026#34;); } Console.WriteLine($\u0026#34;Uploaded file {testDoc}\u0026#34;); //Create a new Dokumenttype code list value  Dokumenttype newDokumenttype = new Dokumenttype(Guid.NewGuid().ToString(), Guid.NewGuid().ToString()); Dokumenttype dokumenttype = client.PutCodeListValue(newDokumenttype); //Link the Dokument to the Moeteregistrering  var newDokument = new Dokument(dokumenttype, \u0026#34;Tilbud (Smith, John, Godkjent)\u0026#34;, TilknyttetRegistreringSom.HOVEDDOKUMENT); var newDokumentversjon = new Dokumentversjon(Variantformat.PRODUKSJONSFORMAT, \u0026#34;.pdf\u0026#34;, dokumentfil); transactionResponse = client.Transaction() .Save(newDokument) .Link(newDokument.LinkRegistrering(moeteregistrering)) .Save(newDokumentversjon) .Link(newDokumentversjon.LinkDokument(newDokument)) .Commit(); var dokumentversjon = transactionResponse.Saved[newDokumentversjon.Id] as Dokumentversjon; Console.WriteLine( $\u0026#34;Created Dokumentversjon: Id={dokumentversjon.Id}, Versjonsnummer: {dokumentversjon.Versjonsnummer}, Filstoerrelse: {dokumentversjon.Filstoerrelse}\u0026#34;); Console.WriteLine(); } private static void BusinessSpecificMetadataSample() { string GROUP_ID = $\u0026#34;gr-{Guid.NewGuid().ToString()}\u0026#34;; string STRING_FIELD_ID = $\u0026#34;f-{Guid.NewGuid().ToString()}\u0026#34;; string DOUBLE_FIELD_ID = $\u0026#34;f-{Guid.NewGuid().ToString()}\u0026#34;; string LONG_FIELD_ID = $\u0026#34;f-{Guid.NewGuid().ToString()}\u0026#34;; //Create a business-specific metadata group  MetadataGroupInfo newGroup = new MetadataGroupInfo(GROUP_ID, \u0026#34;BSM Group Name\u0026#34;, \u0026#34;BSM Group Description\u0026#34;); MetadataGroupInfo savedGroup = client.PutBsmGroup(newGroup); Console.WriteLine( $\u0026#34;Created new group: GroupId={savedGroup.GroupId}, GroupDescription={savedGroup.GroupDescription}, GroupName={savedGroup.GroupName}\u0026#34;); Console.WriteLine(); //Create a new string field with predefined values \u0026#34;value 1\u0026#34;, \u0026#34;value 2\u0026#34; and \u0026#34;value 3\u0026#34;  MetadataFieldInfo newFieldStr = new MetadataFieldInfo(STRING_FIELD_ID, \u0026#34;BSM Field String\u0026#34;, \u0026#34;BSM Field Description\u0026#34;, FieldType.String, new List\u0026lt;object\u0026gt;() {\u0026#34;value 1\u0026#34;, \u0026#34;value 2\u0026#34;, \u0026#34;value 3\u0026#34;}); MetadataFieldInfo savedFieldStr = client.PutBsmField(GROUP_ID, newFieldStr); Console.WriteLine( $\u0026#34;Created new field: FieldId={savedFieldStr.FieldId}, FieldType={savedFieldStr.FieldType}, FieldName={savedFieldStr.FieldName}, FieldValues={string.Join(\u0026#34;,\u0026#34;, savedFieldStr.FieldValues)}\u0026#34;); Console.WriteLine(); //Create a new long field with predefined values 1 and 2  MetadataFieldInfo newFieldLong = new MetadataFieldInfo(LONG_FIELD_ID, \u0026#34;BSM Field Long\u0026#34;, \u0026#34;BSM Field Description\u0026#34;, FieldType.Long, new List\u0026lt;object\u0026gt;() {1L, 2L}); MetadataFieldInfo savedFieldLong = client.PutBsmField(GROUP_ID, newFieldLong); Console.WriteLine( $\u0026#34;Created new field: FieldId={savedFieldLong.FieldId}, FieldType={savedFieldLong.FieldType}, FieldName={savedFieldLong.FieldName}, FieldValues={string.Join(\u0026#34;,\u0026#34;, savedFieldLong.FieldValues)}\u0026#34;); //Create a new double field with no predefined values  MetadataFieldInfo newFieldDouble = new MetadataFieldInfo(DOUBLE_FIELD_ID, \u0026#34;BSM Field Double\u0026#34;, \u0026#34;BSM Field Description\u0026#34;, FieldType.Double); MetadataFieldInfo savedFielDouble = client.PutBsmField(GROUP_ID, newFieldDouble); Console.WriteLine( $\u0026#34;Created new field: FieldId={newFieldDouble.FieldId}, FieldType={newFieldDouble.FieldType}, FieldName={newFieldDouble.FieldName}\u0026#34;); Console.WriteLine(); //Update string field - add new field value, remove an old one  savedFieldStr.FieldValues.Add(\u0026#34;value 4\u0026#34;); savedFieldStr.FieldValues.Remove(\u0026#34;value 3\u0026#34;); MetadataFieldInfo updatedField = client.PutBsmField(GROUP_ID, savedFieldStr); Console.WriteLine( $\u0026#34;Updated field: FieldId={updatedField.FieldId}, FieldType={updatedField.FieldType}, FieldName={updatedField.FieldName}, FieldValues={string.Join(\u0026#34;,\u0026#34;, updatedField.FieldValues)}\u0026#34;); Console.WriteLine(); //Get the business-specific metadata registry for a specific group  BusinessSpecificMetadataInfo metadataInfo = client.BsmRegistry(GROUP_ID); Console.WriteLine(\u0026#34;BusinessSpecificMetadataInfo:\u0026#34;); //Print the registry for this group  foreach (MetadataGroupInfo groupInfo in metadataInfo.Groups) { Console.WriteLine( $\u0026#34;GroupInfo: GroupId={groupInfo.GroupId}, GroupName={groupInfo.GroupName}\u0026#34;); foreach (MetadataFieldInfo fieldInfo in groupInfo.Fields) { Console.WriteLine( $\u0026#34; ---- FieldInfo: FieldId={fieldInfo.FieldId}, FieldType={fieldInfo.FieldType}, FieldName={fieldInfo.FieldName}\u0026#34;); } } Console.WriteLine(\u0026#34;--------------------------------------------------------------------------\u0026#34;); Console.WriteLine(); //Create an Arkiv, Arkivdel and one Mappe  //Set VirksomhetsspesifikkeMetadata for the Mappe  var arkivskaper = new Arkivskaper(\u0026#34;B67\u0026#34;, \u0026#34;Jack Smith\u0026#34;); var arkiv = new Arkiv(\u0026#34;Arkiv - VirksomhetsspesifikkeMetadata Example\u0026#34;); var arkivdel = new Arkivdel(\u0026#34;Arkivdel - VirksomhetsspesifikkeMetadata Example\u0026#34;); var mappe = new Mappe(\u0026#34;Mappe with VirksomhetsspesifikkeMetadata\u0026#34;); //Add three meta-data fields to the Mappe:  mappe.VirksomhetsspesifikkeMetadata.AddBsmFieldValues(GROUP_ID, STRING_FIELD_ID, \u0026#34;value 1\u0026#34;, \u0026#34;value 2\u0026#34;); mappe.VirksomhetsspesifikkeMetadata.AddBsmFieldValues(GROUP_ID, DOUBLE_FIELD_ID, 1.2); mappe.VirksomhetsspesifikkeMetadata.AddBsmFieldValues(GROUP_ID, LONG_FIELD_ID, 2L); var transactionResponse = client.Transaction() .Save(arkiv) .Save(arkivskaper) .Link(arkiv.LinkArkivskaper(arkivskaper)) .Save(arkivdel) .Link(arkivdel.LinkArkiv(arkiv)) .Save(mappe) .Link(mappe.LinkArkivdel(arkivdel)) .Commit(); //Get the saved Mappe  mappe = transactionResponse.Saved[mappe.Id] as Mappe; //Print the VirksomhetsspesifikkeMetadata of the Mappe  Console.WriteLine(\u0026#34;Added VirksomhetsspesifikkeMetadata to folder:\u0026#34;); BsmGroupsMap groupsMap = mappe.VirksomhetsspesifikkeMetadata; foreach (var groupId in groupsMap.Keys) { BsmFieldsMap fieldsMap = mappe.VirksomhetsspesifikkeMetadata[groupId]; foreach (var fieldId in fieldsMap.Keys) { BsmFieldValues values = fieldsMap[fieldId]; Console.WriteLine( $\u0026#34;GroupId={groupId}, FieldId={fieldId}, ValueType={values.Type}, Values=[{string.Join(\u0026#34;,\u0026#34;, values.Values)}]\u0026#34;); } } Console.WriteLine(); //Update the VirksomhetsspesifikkeMetadata of the Mappe  //Add one more string value to the string field  //To add a new field value, simply add it to the set of values of the particular field  //Use the \u0026#34;AddBsmFieldValues\u0026#34; method, if you want to override the existing set of values with a new one  mappe.VirksomhetsspesifikkeMetadata[GROUP_ID][STRING_FIELD_ID].Values.Add(\u0026#34;value 4\u0026#34;); //Remove one of the values of the double field  mappe.VirksomhetsspesifikkeMetadata.DeleteBsmFieldValue(GROUP_ID, DOUBLE_FIELD_ID, 2.6); //Completely remove the long field  mappe.VirksomhetsspesifikkeMetadata.DeleteBsmField(GROUP_ID, LONG_FIELD_ID); //It is also possible to remove a whole group:  //mappe.VirksomhetsspesifikkeMetadata.DeleteBsmGroup(groupIdentfier);  transactionResponse = client.Transaction() .Save(mappe) .Commit(); //Make query to fetch the Mappe  QueryResponse\u0026lt;Mappe\u0026gt; queryResponse = client.Query\u0026lt;Mappe\u0026gt;(\u0026#34;id=@id\u0026#34;, 1) .AddQueryParam(\u0026#34;@id\u0026#34;, mappe.Id) .Execute(); mappe = queryResponse.Results.First(); //Print the new VirksomhetsspesifikkeMetadata  Console.WriteLine(\u0026#34;Updated VirksomhetsspesifikkeMetadata of folder:\u0026#34;); groupsMap = mappe.VirksomhetsspesifikkeMetadata; foreach (var groupId in groupsMap.Keys) { BsmFieldsMap fieldsMap = mappe.VirksomhetsspesifikkeMetadata[groupId]; foreach (var fieldId in fieldsMap.Keys) { BsmFieldValues values = fieldsMap[fieldId]; Console.WriteLine( $\u0026#34;GroupId={groupId}, FieldId={fieldId}, ValueType={values.Type}, Values=[{string.Join(\u0026#34;,\u0026#34;, values.Values)}]\u0026#34;); } } Console.WriteLine(); //Delete field  client.DeleteBsmField(GROUP_ID, LONG_FIELD_ID); Console.WriteLine($\u0026#34;Deleted field with FieldId={LONG_FIELD_ID}\u0026#34;); Console.WriteLine(); //Delete folder  client.Transaction().Delete(mappe).Commit(); Console.WriteLine($\u0026#34;Deleted folder\u0026#34;); Console.WriteLine(); //Delete group  client.DeleteBsmGroup(GROUP_ID); Console.WriteLine($\u0026#34;Deleted group with GroupId={GROUP_ID}\u0026#34;); Console.WriteLine(); } private static void CodeListsSample() { List\u0026lt;CodeList\u0026gt; allCodeLists = client.CodeLists(); Console.WriteLine($\u0026#34;Code lists:{Environment.NewLine}\u0026#34;); foreach (CodeList list in allCodeLists) { Console.WriteLine($\u0026#34;Code list: {list.Type}.{list.Field}\u0026#34;); foreach (CodeValue codeValue in list.Values) { Console.WriteLine( $\u0026#34; --- Code value: Code={codeValue.Code}, Name={codeValue.Name}, Description={codeValue.Description}\u0026#34;); } Console.WriteLine(); } Console.WriteLine(); //Create new list value for the code list Dokumenttype  Dokumenttype dokumenttype = new Dokumenttype(Guid.NewGuid().ToString(), Guid.NewGuid().ToString(), \u0026#34;Description\u0026#34;); client.PutCodeListValue(dokumenttype); Console.WriteLine( $\u0026#34;Created new code value: Code={dokumenttype.Code}, Name={dokumenttype.Name}, Description={dokumenttype.Description}\u0026#34;); Console.WriteLine(); //Update list value  Dokumenttype updatedValue = new Dokumenttype(dokumenttype.Code, dokumenttype.Name, \u0026#34;New Description\u0026#34;); client.PutCodeListValue(updatedValue); Console.WriteLine( $\u0026#34;Updated code value: Code={updatedValue.Code}, Name={updatedValue.Name}, Description={updatedValue.Description}\u0026#34;); Console.WriteLine(); //Delete list value  client.DeleteCodeListValue(updatedValue); Console.WriteLine($\u0026#34;Deleted code value\u0026#34;); Console.WriteLine(); } } class Options { [Option(\u0026#34;idpaddr\u0026#34;, Required = true, HelpText = \u0026#34;Idp server address\u0026#34;)] public string IdpServerAddress { get; set; } [Option(\u0026#34;clientid\u0026#34;, Required = true, HelpText = \u0026#34;Idp Client Id\u0026#34;)] public string ClientId { get; set; } [Option(\u0026#34;clientsecret\u0026#34;, Required = true, HelpText = \u0026#34;Idp Client Secret\u0026#34;)] public string ClientSecret { get; set; } [Option(\u0026#34;username\u0026#34;, Required = true, HelpText = \u0026#34;Username\u0026#34;)] public string Username { get; set; } [Option(\u0026#34;password\u0026#34;, Required = true, HelpText = \u0026#34;Password\u0026#34;)] public string Password { get; set; } [Option(\u0026#34;addr\u0026#34;, Required = true, HelpText = \u0026#34;Server address\u0026#34;)] public string ServerAddress { get; set; } [Option(\u0026#34;cert\u0026#34;, HelpText = \u0026#34;Path to certificate file\u0026#34;)] public string CertificatePath { get; set; } [Option(\u0026#34;certpass\u0026#34;, HelpText = \u0026#34;Certificate password\u0026#34;)] public string CertificatePass { get; set; } [Option(\u0026#34;testdoc\u0026#34;, Required = true, HelpText = \u0026#34;Path to test file\u0026#34;)] public string TestDoc { get; set; } } }   { \u0026#34;results\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;moeteregistreringstype\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Møtebok\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;MP\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Møteprotokoll\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;SF\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Saksframlegg\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;D\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Vedtak i møtesak\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;VL\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Vedlegg til møtesak\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;SL\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Saksliste\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;MI\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Møteinnkalling\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;M\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Møtereferat\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;SP\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Saksprotokoll\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;N\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Notat til politisk utvalg\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;O\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Oversikt over deltakere, representanter og medlemmer i utvalg, råd og møter\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;moeteregistreringsstatus\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;administrativEnhet\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;AD1\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Administrative Unit 1\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Moeteregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;moetesakstype\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;RS\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Referatsak\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;PS\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Politisk sak\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Uregistrert sak\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;FO\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Interpellasjon\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;DS\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Delegert møtesak\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Merknad\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;merknadstype\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;IMER\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Intern merknad\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;MER\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Merknad\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;saksstatus\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Under behandling\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;P\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Unntatt prosesstyring\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Avsluttet\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Under behandling\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;R\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Opprettet av saksbehandler\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;S\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Avsluttet av saksbehandler\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Utgår\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;F\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Ferdig fra saksbehandler\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;mappetype\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;administrativEnhet\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;AD1\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Administrative Unit 1\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;korrespondanseparttype\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;IK\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Intern kopimottaker\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;IM\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Intern mottaker\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;EK\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Kopimottaker\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;GM\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Gruppemottaker\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;EM\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Mottaker\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;IA\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Intern avsender\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;EA\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Avsender\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;ekspederingskanal\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;S\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;SvarUt\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;E-post\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Utskrift\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;administrativEnhet\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;AD1\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Administrative Unit 1\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Plan\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;lovreferanse\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Plan\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;plantype\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Plan\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;planstatus\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Klasse\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Arkivdel\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Arkivdel\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Arkivdel\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;arkivdelstatus\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Aktiv periode\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;P\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Avsluttet periode\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Aktiv periode\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Uaktuelle mapper\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;O\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Overlappingsperiode\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Mappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Mappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;mappetype\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Mappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokumentversjon\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;variantformat\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;P\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Produksjonsformat\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;P\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Produksjonsformat\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Arkivformat\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumenttype\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;tilknyttetRegistreringSom\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;V\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Vedlegg\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;H\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Hoveddokument\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;M\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Another\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentstatus\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Dokumentet er under redigering\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Dokumentet er under redigering\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;F\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Dokumentet er ferdigstilt\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Dokumentflyt\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;flytStatus\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;S\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Sendt tilbake til saksbehandler med kommentarer\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;G\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Godkjent\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;I\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Ikke godkjent\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Moetemappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Moetemappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;mappetype\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Moetemappe\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;journalstatus\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;J\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Journalført\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Arkivert\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;R\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Reservert dokument\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;S\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Saksbehandler har registrert innkommet dokument\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Ekspedert\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Utgår\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;F\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Ferdigstilt fra saksbehandler\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;G\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Godkjent av leder\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;J\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Journalført\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;M\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Midlertidig registrering av innkommet dokument\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;journalposttype\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;S\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Saksframlegg\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Utgående dokument\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;X\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Organinternt dokument uten oppfølging\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;I\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Inngående dokument\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;N\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Organinternt dokument for oppfølging\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Basisregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;skjerming\u0026#34;, \u0026#34;values\u0026#34;: [] }, { \u0026#34;type\u0026#34;: \u0026#34;Basisregistrering\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Avskrivning\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;avskrivningsmaate\u0026#34;, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;TE\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Tatt til etterretning\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;BU\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Besvart med brev\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;BE\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Besvart med e-post\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;TO\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Tatt til orientering\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;TLF\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Besvart på telefon\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Arkiv\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;arkivstatus\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;O\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Opprettet\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Avsluttet\u0026#34; }, { \u0026#34;code\u0026#34;: \u0026#34;O\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Opprettet\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Arkiv\u0026#34;, \u0026#34;field\u0026#34;: \u0026#34;dokumentmedium\u0026#34;, \u0026#34;defaultValue\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; }, \u0026#34;values\u0026#34;: [ { \u0026#34;code\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Elektronisk arkiv\u0026#34; } ] } ] }     AbstractRegistrierung / AbstractRecord Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified    Entity Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified   M004 string registreringsIdent x x   cw x x x    M020 string tittel x    x x x x    M025 string offentligTittel     x x x x    M021 string beskrivelse     x x x x    M024 string forfatter     x x x x    M300 string dokumentmedium x x dokumentmedium  x x x     M013 number journalaar x x   cw x x x    M014 number journalsekvensnummer x x   cw x x x    M015 number journalpostnummer x x   cw x x x     string journalansvarlig x x   x x x x • The name of the person responsible for this Journalpost (similar to M306 Saksmappe#saksansvarlig)    string journalansvarligBrukerIdent x x   x x x x • The user ID of the person responsible for this Journalpost as stored in journalansvarlig (similar to M306 Saksmappe#saksansvarligBrukerIdent)   M082 string journalposttype x  journalposttype  x x x     M053 string journalstatus x x journalstatus  x x x     M101 date registreringsDato x x   x x x x    M103 date dokumentetsDato     x x x x    M109 date forfallsdato     x x x x    M104 timestamp mottattDato     x x x x    M105 timestamp sendtDato     x x x x    M110 date offentlighetsvurdertDato     x x x x     boolean skjermKorrespondanseParterEInnsyn  x   x x x x When true, it indicates that Korrespondansepart objects of this Journalpost referenced by refKorrespondansepart will be screened in eInnsyn, even if the Journalpost is not effectively screened. When false or null, it indicates that Korrespondansepart objects will not be screened in eInnsyn, even if the Journalpost is effectively screened. Defaults to false.   M500 string skjerming   skjerming  x x x                   M711 object virksomhetsspesifikkeMetadata     x x       Reference Fields    Field Not null View Query Link Unlink Comment     refMappe c x x x x • references Saksmappe• exactly one of refMappe and refArkivdel is required   refArkivdel c x x x x • references Arkivdel• exactly one of refMappe and refArkivdel is required   refKorrespondansepart x  x x     refDokument   x x x    refPrimaerKlasse  x x x x • references a Klasse from the primary Klassifikasjonssystem of the Arkivdel   refSekundaerKlasse   x x x • references a Klasse from any Klassifikasjonssystem   refEksternId   x x     refDokumentflyt   x x     refNoekkelord   x x     refAvskrivning   x x     refTilknyttetAvskrivning   x x x    refMerknad   x x x    refNasjonalIdentifikator   x x     refKryssreferanseTilMappe   x x x refers to AbstraktMappe that the current AbstraktRegistrering cross references   refKryssreferanseFraMappe   x x x refers to AbstraktMappe that cross reference the current AbstraktRegistrering   refKryssreferanseTilRegistrering   x x x refers to AbstraktRegistrering that the current AbstraktRegistrering cross references   refKryssreferanseFraRegistrering   x x x refers to AbstraktRegistrering that cross reference the current AbstraktRegistrering    Basic Usage of the Registry Entry "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractfolder/folder/",
	"title": "Mappe / Basic Folder",
	"tags": [],
	"description": "",
	"content": " AbstractRegistrierung / AbstractRecord Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified    Entity Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified   M004 string registreringsIdent x x   cw x x x    M020 string tittel x    x x x x    M025 string offentligTittel     x x x x    M021 string beskrivelse     x x x x    M024 string forfatter     x x x x    M300 string dokumentmedium x x dokumentmedium  x x x     M013 number journalaar x x   cw x x x    M014 number journalsekvensnummer x x   cw x x x    M015 number journalpostnummer x x   cw x x x     string journalansvarlig x x   x x x x • The name of the person responsible for this Journalpost (similar to M306 Saksmappe#saksansvarlig)    string journalansvarligBrukerIdent x x   x x x x • The user ID of the person responsible for this Journalpost as stored in journalansvarlig (similar to M306 Saksmappe#saksansvarligBrukerIdent)   M082 string journalposttype x  journalposttype  x x x     M053 string journalstatus x x journalstatus  x x x     M101 date registreringsDato x x   x x x x    M103 date dokumentetsDato     x x x x    M109 date forfallsdato     x x x x    M104 timestamp mottattDato     x x x x    M105 timestamp sendtDato     x x x x    M110 date offentlighetsvurdertDato     x x x x     boolean skjermKorrespondanseParterEInnsyn  x   x x x x When true, it indicates that Korrespondansepart objects of this Journalpost referenced by refKorrespondansepart will be screened in eInnsyn, even if the Journalpost is not effectively screened. When false or null, it indicates that Korrespondansepart objects will not be screened in eInnsyn, even if the Journalpost is effectively screened. Defaults to false.   M500 string skjerming   skjerming  x x x                   M711 object virksomhetsspesifikkeMetadata     x x       Reference Fields    Field Not null View Query Link Unlink Comment     refMappe c x x x x • references Saksmappe• exactly one of refMappe and refArkivdel is required   refArkivdel c x x x x • references Arkivdel• exactly one of refMappe and refArkivdel is required   refKorrespondansepart x  x x     refDokument   x x x    refPrimaerKlasse  x x x x • references a Klasse from the primary Klassifikasjonssystem of the Arkivdel   refSekundaerKlasse   x x x • references a Klasse from any Klassifikasjonssystem   refEksternId   x x     refDokumentflyt   x x     refNoekkelord   x x     refAvskrivning   x x     refTilknyttetAvskrivning   x x x    refMerknad   x x x    refNasjonalIdentifikator   x x     refKryssreferanseTilMappe   x x x refers to AbstraktMappe that the current AbstraktRegistrering cross references   refKryssreferanseFraMappe   x x x refers to AbstraktMappe that cross reference the current AbstraktRegistrering   refKryssreferanseTilRegistrering   x x x refers to AbstraktRegistrering that the current AbstraktRegistrering cross references   refKryssreferanseFraRegistrering   x x x refers to AbstraktRegistrering that cross reference the current AbstraktRegistrering    "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractfolder/meetingfolder/",
	"title": "Moetemappe / Meeting Folder",
	"tags": [],
	"description": "",
	"content": " AbstractRegistrierung / AbstractRecord Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified    Entity Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified   M004 string registreringsIdent x x   cw x x x    M020 string tittel x    x x x x    M025 string offentligTittel     x x x x    M021 string beskrivelse     x x x x    M024 string forfatter     x x x x    M300 string dokumentmedium x x dokumentmedium  x x x     M013 number journalaar x x   cw x x x    M014 number journalsekvensnummer x x   cw x x x    M015 number journalpostnummer x x   cw x x x     string journalansvarlig x x   x x x x • The name of the person responsible for this Journalpost (similar to M306 Saksmappe#saksansvarlig)    string journalansvarligBrukerIdent x x   x x x x • The user ID of the person responsible for this Journalpost as stored in journalansvarlig (similar to M306 Saksmappe#saksansvarligBrukerIdent)   M082 string journalposttype x  journalposttype  x x x     M053 string journalstatus x x journalstatus  x x x     M101 date registreringsDato x x   x x x x    M103 date dokumentetsDato     x x x x    M109 date forfallsdato     x x x x    M104 timestamp mottattDato     x x x x    M105 timestamp sendtDato     x x x x    M110 date offentlighetsvurdertDato     x x x x     boolean skjermKorrespondanseParterEInnsyn  x   x x x x When true, it indicates that Korrespondansepart objects of this Journalpost referenced by refKorrespondansepart will be screened in eInnsyn, even if the Journalpost is not effectively screened. When false or null, it indicates that Korrespondansepart objects will not be screened in eInnsyn, even if the Journalpost is effectively screened. Defaults to false.   M500 string skjerming   skjerming  x x x                   M711 object virksomhetsspesifikkeMetadata     x x       Reference Fields    Field Not null View Query Link Unlink Comment     refMappe c x x x x • references Saksmappe• exactly one of refMappe and refArkivdel is required   refArkivdel c x x x x • references Arkivdel• exactly one of refMappe and refArkivdel is required   refKorrespondansepart x  x x     refDokument   x x x    refPrimaerKlasse  x x x x • references a Klasse from the primary Klassifikasjonssystem of the Arkivdel   refSekundaerKlasse   x x x • references a Klasse from any Klassifikasjonssystem   refEksternId   x x     refDokumentflyt   x x     refNoekkelord   x x     refAvskrivning   x x     refTilknyttetAvskrivning   x x x    refMerknad   x x x    refNasjonalIdentifikator   x x     refKryssreferanseTilMappe   x x x refers to AbstraktMappe that the current AbstraktRegistrering cross references   refKryssreferanseFraMappe   x x x refers to AbstraktMappe that cross reference the current AbstraktRegistrering   refKryssreferanseTilRegistrering   x x x refers to AbstraktRegistrering that the current AbstraktRegistrering cross references   refKryssreferanseFraRegistrering   x x x refers to AbstraktRegistrering that cross reference the current AbstraktRegistrering    "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractrecord/meetingrecord/",
	"title": "Moeteregistrering / Meeting Record",
	"tags": [],
	"description": "",
	"content": " AbstractRegistrierung / AbstractRecord Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified    Entity Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified   M004 string registreringsIdent x x   cw x x x    M020 string tittel x    x x x x    M025 string offentligTittel     x x x x    M021 string beskrivelse     x x x x    M024 string forfatter     x x x x    M300 string dokumentmedium x x dokumentmedium  x x x     M013 number journalaar x x   cw x x x    M014 number journalsekvensnummer x x   cw x x x    M015 number journalpostnummer x x   cw x x x     string journalansvarlig x x   x x x x • The name of the person responsible for this Journalpost (similar to M306 Saksmappe#saksansvarlig)    string journalansvarligBrukerIdent x x   x x x x • The user ID of the person responsible for this Journalpost as stored in journalansvarlig (similar to M306 Saksmappe#saksansvarligBrukerIdent)   M082 string journalposttype x  journalposttype  x x x     M053 string journalstatus x x journalstatus  x x x     M101 date registreringsDato x x   x x x x    M103 date dokumentetsDato     x x x x    M109 date forfallsdato     x x x x    M104 timestamp mottattDato     x x x x    M105 timestamp sendtDato     x x x x    M110 date offentlighetsvurdertDato     x x x x     boolean skjermKorrespondanseParterEInnsyn  x   x x x x When true, it indicates that Korrespondansepart objects of this Journalpost referenced by refKorrespondansepart will be screened in eInnsyn, even if the Journalpost is not effectively screened. When false or null, it indicates that Korrespondansepart objects will not be screened in eInnsyn, even if the Journalpost is effectively screened. Defaults to false.   M500 string skjerming   skjerming  x x x                   M711 object virksomhetsspesifikkeMetadata     x x       Reference Fields    Field Not null View Query Link Unlink Comment     refMappe c x x x x • references Saksmappe• exactly one of refMappe and refArkivdel is required   refArkivdel c x x x x • references Arkivdel• exactly one of refMappe and refArkivdel is required   refKorrespondansepart x  x x     refDokument   x x x    refPrimaerKlasse  x x x x • references a Klasse from the primary Klassifikasjonssystem of the Arkivdel   refSekundaerKlasse   x x x • references a Klasse from any Klassifikasjonssystem   refEksternId   x x     refDokumentflyt   x x     refNoekkelord   x x     refAvskrivning   x x     refTilknyttetAvskrivning   x x x    refMerknad   x x x    refNasjonalIdentifikator   x x     refKryssreferanseTilMappe   x x x refers to AbstraktMappe that the current AbstraktRegistrering cross references   refKryssreferanseFraMappe   x x x refers to AbstraktMappe that cross reference the current AbstraktRegistrering   refKryssreferanseTilRegistrering   x x x refers to AbstraktRegistrering that the current AbstraktRegistrering cross references   refKryssreferanseFraRegistrering   x x x refers to AbstraktRegistrering that cross reference the current AbstraktRegistrering    "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractrecord/",
	"title": "Records",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractfolder/casefile/",
	"title": "Saksmappe / Case File",
	"tags": [],
	"description": "",
	"content": " AbstractRegistrierung / AbstractRecord Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified    Entity Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems• once set, this value cannot be modified   M004 string registreringsIdent x x   cw x x x    M020 string tittel x    x x x x    M025 string offentligTittel     x x x x    M021 string beskrivelse     x x x x    M024 string forfatter     x x x x    M300 string dokumentmedium x x dokumentmedium  x x x     M013 number journalaar x x   cw x x x    M014 number journalsekvensnummer x x   cw x x x    M015 number journalpostnummer x x   cw x x x     string journalansvarlig x x   x x x x • The name of the person responsible for this Journalpost (similar to M306 Saksmappe#saksansvarlig)    string journalansvarligBrukerIdent x x   x x x x • The user ID of the person responsible for this Journalpost as stored in journalansvarlig (similar to M306 Saksmappe#saksansvarligBrukerIdent)   M082 string journalposttype x  journalposttype  x x x     M053 string journalstatus x x journalstatus  x x x     M101 date registreringsDato x x   x x x x    M103 date dokumentetsDato     x x x x    M109 date forfallsdato     x x x x    M104 timestamp mottattDato     x x x x    M105 timestamp sendtDato     x x x x    M110 date offentlighetsvurdertDato     x x x x     boolean skjermKorrespondanseParterEInnsyn  x   x x x x When true, it indicates that Korrespondansepart objects of this Journalpost referenced by refKorrespondansepart will be screened in eInnsyn, even if the Journalpost is not effectively screened. When false or null, it indicates that Korrespondansepart objects will not be screened in eInnsyn, even if the Journalpost is effectively screened. Defaults to false.   M500 string skjerming   skjerming  x x x                   M711 object virksomhetsspesifikkeMetadata     x x       Reference Fields    Field Not null View Query Link Unlink Comment     refMappe c x x x x • references Saksmappe• exactly one of refMappe and refArkivdel is required   refArkivdel c x x x x • references Arkivdel• exactly one of refMappe and refArkivdel is required   refKorrespondansepart x  x x     refDokument   x x x    refPrimaerKlasse  x x x x • references a Klasse from the primary Klassifikasjonssystem of the Arkivdel   refSekundaerKlasse   x x x • references a Klasse from any Klassifikasjonssystem   refEksternId   x x     refDokumentflyt   x x     refNoekkelord   x x     refAvskrivning   x x     refTilknyttetAvskrivning   x x x    refMerknad   x x x    refNasjonalIdentifikator   x x     refKryssreferanseTilMappe   x x x refers to AbstraktMappe that the current AbstraktRegistrering cross references   refKryssreferanseFraMappe   x x x refers to AbstraktMappe that cross reference the current AbstraktRegistrering   refKryssreferanseTilRegistrering   x x x refers to AbstraktRegistrering that the current AbstraktRegistrering cross references   refKryssreferanseFraRegistrering   x x x refers to AbstraktRegistrering that cross reference the current AbstraktRegistrering    "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/operations/query/",
	"title": "Query",
	"tags": ["documentation", "tutorial"],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/tags/documentation/",
	"title": "documentation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/tags/tutorial/",
	"title": "tutorial",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
}]