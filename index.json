[
{
	"uri": "https://myakimov.github.io/documaster-api-docs/general/",
	"title": "Getting Started",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Getting started Discover what Documaster Norak5 API provides, how to get access and start developing integrations using it.\n"
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/",
	"title": "Documaster Noark5 API",
	"tags": [],
	"description": "",
	"content": "Documaster Noark5 API This is the documentation site for the Documaster Noark5 Compliant API v1.0. Documentation is divided in multiple sections described below.\nGetting Started Getting Started section outlines the details regarding onboarding integrating parties, API security, basic infromation of the API operations, model, usage and general develoler guidelines. Additionally all details regarding Documaster Client SDKs usage (Java, .NET) are in the section.\nThe section contains all the required information for an integration developers to be able to have a working developer environment towards a Documaster integration instance.\n Getting Started  Operations Operations section contains details regarding all the operations available in the API, their usage and provided functionality.\n Operations  Data Model Data Model section is the reference for all data model entities,their fields, relations and usages.\n Data Model  Examples Examples section is the one-stop place in the documentation site for every example available, separted per entity, but also containing examples for common or specific use cases of the API.\n Examples   "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/operations/",
	"title": "Operations",
	"tags": [],
	"description": "",
	"content": "Chapter 2 Content Find out how to create and organize your content quickly and intuitively.\n"
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/tags/",
	"title": "Overview",
	"tags": ["documentation", "tutorial"],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/general/overview/",
	"title": "Overview",
	"tags": [],
	"description": "",
	"content": "Overview Documaster API provides the capabilities of managing the Noark5 compliant model, that Documaster Archive is based on. Supporting various use cases and integration scenarios is at the basis of the API design, combined with strong focus on security, consistency and efficiency.\nDocumaster Noark5 API key features:\n Supports full control over Noark5 compliant model of Documaster Archive  Strong consistency model for entities creation Flexible query language Full-text search capabilities Bulk operations   Secured using OAuth2/OIC, which combined with Documaster Archive internal security model, provides fine grained control over each and every aspect of the Noark5 entities Support for external IDP (Identity Providers) such as Azure ADFS (Office365 integration), Active Directory, LDAP, others. HTTP/JSON based, making it easy to integrate with wide varieaty of external systems API designed to be solely consumed in a server-to-server manner Documaster developed client SDKs for both Java and .NET  Noark5 Noark is a Norwegian national standard for electronic records management and archiving which began its history in 1984. The latest major version of the standard, Noark 5, is based on the EU standard MoReq. Even though there are many similarities between the two, Noark 5 is more pragmatic than MoReq in certain areas where MoReq follows core archival principles more strictly.\nNoark5 Standard Official Page\nStart Using the Documaster Noark5 API  As a very first step of using the API, one should be provided with the required access (credentils, certificates, hosts, etc.).\n Onboarding    Second would be deciding on the type of client you would be developing. If your system is Java or .NET based, please consider using our Client SDKs.\n Client SDKs    Third, authenticate using your credentials agains the integration instance you gained access to. We provide IDP Client SDKs for Java and .NET in case this is your preffered way.\n Authentication and Authorization    As a last of having a working development environment, try a couple of examples.\n First API Interaction  "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractfolder/casefile/",
	"title": "Case File",
	"tags": [],
	"description": "",
	"content": "Saksmappe "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractfolder/casefile/caseparty/",
	"title": "Case Party",
	"tags": [],
	"description": "",
	"content": "Sakspart "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/common/",
	"title": "Common",
	"tags": [],
	"description": "",
	"content": "AbstraktRegistrering / Abstract Record Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from\n• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems\n• once set, this value cannot be modified\n    "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractrecord/registryentry/",
	"title": "Registry Entry",
	"tags": [],
	"description": "",
	"content": "Overview Registry Entry is a journaling entry collecting documents part of an interaction with a correspondence party.\n Registry Entry Journalpost is a subtype of AbstraktRegistrering and as such inherits fields part of the parent object. Being a core Noark5 model entity, Registry Entry is managed using the POST /transaction operation. Registry Entry can be linked under either a Case File (Saksmappe) or a Folder (Mappe). Registry Entry cannot be created without a transaction::link action to an entity on the folders level through refMappe Any Registry Entry, should be linked to a Correspondence Party(Korrespondansepart) that needs to be created in the same transaction as the Registry Entry itself. Registry entries are referenced by Document(Dokument) entities during Document, DocumentVersion creation  Document (Dokument) Entity Reference     Table below contains the names with which the entity can be used in transaction and query operations.\n   Context Entity Name     referred to in transaction::save action as Journalpost   referred to in transaction::link action Journalpost   referred to in transaction::unlink action Journalpost   referred to in query operation Journalpost or AbstraktRegistrering     Diagram showing the relation of Registry Entry entity (Journalpsot) to any other entities through its reference fields. The diagram depicts the most important set of fields, leaving some of the use cases out of it for simplicity.  Diagram of the relation of Registry Entry and Abstract Record and siblings. Fields AbstraktRegistrering / Abstract Record Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id x x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from\n• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems\n• once set, this value cannot be modified\n    Entity Fields    Field no. Type Field Not null Has default Code list  Save View Query Sort Comment      string id  x   sm x x x     string version x x   sm x x                   M001 string  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  uuid unique identifer of entity in Documaster system   x x   cw x x x    M600 timestamp  .definition { visibility: hidden; width: 220px; background-color: #555; color: #fff; text-align: left; border-radius: 6px; padding: 5px 0; position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px; opacity: 0; transition: opacity 0.3s; padding: 5px 5px 5px 5px; } .term { position: relative; display: inline-block; border-bottom: 1px dotted black; } .term:hover .definition { visibility: visible; opacity: 1; }  opprettetDato createdDate (en)  date at which the entity was created   x x   cw x x x    M601 string opprettetAv x x   cw x x x    M601 string opprettetAvBrukerIdent x x   cw x x x    M602 timestamp avsluttetDato     cw x x x    M603 string avsluttetAv     cw x x x    M603 string avsluttetAvBrukerIdent     cw x x x     string prefiks     cw x x x • optional identifier of the system this Journalpost originated from\n• it is strongly advised to populate this field when the target system contains or will contain data from multiple source case management systems\n• once set, this value cannot be modified\n   M004 string registreringsIdent x x   cw x x x    M020 string tittel x    x x x x    M025 string offentligTittel     x x x x    M021 string beskrivelse     x x x x    M024 string forfatter     x x x x    M300 string dokumentmedium x x dokumentmedium  x x x     M013 number journalaar x x   cw x x x    M014 number journalsekvensnummer x x   cw x x x    M015 number journalpostnummer x x   cw x x x     string journalansvarlig x x   x x x x • The name of the person responsible for this Journalpost (similar to M306 Saksmappe#saksansvarlig)\n    string journalansvarligBrukerIdent x x   x x x x • The user ID of the person responsible for this Journalpost as stored in journalansvarlig (similar to M306 Saksmappe#saksansvarligBrukerIdent)\n   M082 string journalposttype x  journalposttype  x x x     M053 string journalstatus x x journalstatus  x x x     M101 date registreringsDato x x   x x x x    M103 date dokumentetsDato     x x x x    M109 date forfallsdato     x x x x    M104 timestamp mottattDato     x x x x    M105 timestamp sendtDato     x x x x    M110 date offentlighetsvurdertDato     x x x x     boolean skjermKorrespondanseParterEInnsyn  x   x x x x When true, it indicates that Korrespondansepart objects of this Journalpost referenced by refKorrespondansepart will be screened in eInnsyn, even if the Journalpost is not effectively screened. When false or null, it indicates that Korrespondansepart objects will not be screened in eInnsyn, even if the Journalpost is effectively screened. Defaults to false.   M500 string skjerming   skjerming  x x x                   M711 object virksomhetsspesifikkeMetadata     x x       Reference Fields    Field Not null View Query Link Unlink Comment     refMappe c x x x x • references Saksmappe\n• exactly one of refMappe and refArkivdel is required\n   refArkivdel c x x x x • references Arkivdel\n• exactly one of refMappe and refArkivdel is required\n   refKorrespondansepart x  x x     refDokument   x x x    refPrimaerKlasse  x x x x • references a Klasse from the primary Klassifikasjonssystem of the Arkivdel\n   refSekundaerKlasse   x x x • references a Klasse from any Klassifikasjonssystem\n   refEksternId   x x     refDokumentflyt   x x     refNoekkelord   x x     refAvskrivning   x x     refTilknyttetAvskrivning   x x x    refMerknad   x x x    refNasjonalIdentifikator   x x     refKryssreferanseTilMappe   x x x refers to AbstraktMappe that the current AbstraktRegistrering cross references   refKryssreferanseFraMappe   x x x refers to AbstraktMappe that cross reference the current AbstraktRegistrering   refKryssreferanseTilRegistrering   x x x refers to AbstraktRegistrering that the current AbstraktRegistrering cross references   refKryssreferanseFraRegistrering   x x x refers to AbstraktRegistrering that cross reference the current AbstraktRegistrering    Working with Registry Entry Creating Registry Entry Registry entries are created using transaction API, where in a single transaction the newly created registry entry should be linked to a case file (Saksmappe) or a basic folder (Mappe). Bear in mind that the registry entry can be under only one folder. Newly created registry entry requires at least one correspondence party (Korrespondansepart) to be created and associated with the registry entry. The link is done using transaction::link action following the guidelines to use newly created entry reference field to parent entry (Korrespondansepart::refRegistrering), rather than parent entry reference field (Journalpost::refKorrespondansepart). Take a look at the Fields section of this document for details about the mandatory/optional fields for registry entries.\nDocument (Dokument) entities are associated to Registry entries during documents creation. Examples how a document is created and associated to a registry entry can be found here.\n Correspondence Party Entity Document Entity Document Version Entity  HTTP   Request\nPOST https://v2-34-0.local.documaster.tech:8083/rms/api/public/noark5/v1/transaction HTTP/1.1 ... Authorization: Bearer {{accessTokenIntegrator}} Content-Type: application/json X-Documaster-Error-Response-Type: application/json { \u0026#34;actions\u0026#34;: [ { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;journalpost-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;tittel\u0026#34;: \u0026#34;API Created Registry Entry\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Registry Entry Description\u0026#34;, \u0026#34;journalposttype\u0026#34;: \u0026#34;U\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;journalpost-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refMappe\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;691\u0026#34; }, { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;korrespondansepart-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;korrespondanseparttype\u0026#34;: \u0026#34;EA\u0026#34;, \u0026#34;korrespondansepartNavn\u0026#34;: \u0026#34;Correspondence Party Name\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;korrespondansepart-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refRegistrering\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;journalpost-temp-id-1\u0026#34; } ] }  Response\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;saved\u0026#34;: { \u0026#34;journalpost-temp-id-1\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;938\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;8\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;35926f91-96d2-40d7-961e-9ffb368673af\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-24T14:14:05.933+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;registreringsIdent\u0026#34;: \u0026#34;2021/5\u0026#34;, \u0026#34;tittel\u0026#34;: \u0026#34;API Created Registry Entry\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Registry Entry Description\u0026#34;, \u0026#34;registreringsDato\u0026#34;: \u0026#34;2021-11-24T14:14:05.950+0100\u0026#34;, \u0026#34;dokumentmedium\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;journalaar\u0026#34;: 2021, \u0026#34;journalsekvensnummer\u0026#34;: 5, \u0026#34;journalpostnummer\u0026#34;: 5, \u0026#34;journalansvarlig\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;journalansvarligBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;journalposttype\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;journalstatus\u0026#34;: \u0026#34;J\u0026#34;, \u0026#34;skjermKorrespondanseParterEInnsyn\u0026#34;: false }, \u0026#34;links\u0026#34;: { \u0026#34;refMappe\u0026#34;: 691 } }, \u0026#34;korrespondansepart-temp-id-1\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;939\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;3\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;3f7bad64-9560-45d2-82a5-4e5fb06a5c13\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-24T14:14:05.953+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;korrespondanseparttype\u0026#34;: \u0026#34;EA\u0026#34;, \u0026#34;korrespondansepartNavn\u0026#34;: \u0026#34;Correspondence Party Name\u0026#34; }, \u0026#34;links\u0026#34;: { \u0026#34;refRegistrering\u0026#34;: 938 } } } }     Update Registry Entry Updating a registry entry is done through transaction::save action in the same way it is used to create it, with the difference that the actual id of the registry entry should be used (returned in create call response in $.saved.{tempIDofRegistryEntry}.id). The example below show an update of the registry entry (chaning the description) and linking a new Address (Adresse).\nHTTP   Request\nPOST https://v2-34-0.local.documaster.tech:8083/rms/api/public/noark5/v1/transaction HTTP/1.1 ... Authorization: Bearer {{accessTokenIntegrator}} Content-Type: application/json X-Documaster-Error-Response-Type: application/json { \u0026#34;actions\u0026#34;: [ { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;938\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;beskrivelse\u0026#34;: \u0026#34;Updated Registry Entry Description\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Adresse\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;adresse-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;adresseKnr\u0026#34;: \u0026#34;0301\u0026#34;, \u0026#34;postnr\u0026#34;: \u0026#34;0301\u0026#34;, \u0026#34;poststed\u0026#34;: \u0026#34;Oslo\u0026#34;, \u0026#34;adressenavn\u0026#34;: \u0026#34;Rådhusplassen\u0026#34;, \u0026#34;nummer\u0026#34;: \u0026#34;1\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Adresse\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;adresse-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refRegistrering\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;938\u0026#34; } ] }  Response\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;saved\u0026#34;: { \u0026#34;938\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;938\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;9\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;35926f91-96d2-40d7-961e-9ffb368673af\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-24T14:14:05.933+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;registreringsIdent\u0026#34;: \u0026#34;2021/5\u0026#34;, \u0026#34;tittel\u0026#34;: \u0026#34;API Created Registry Entry\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Updated Registry Entry Description\u0026#34;, \u0026#34;registreringsDato\u0026#34;: \u0026#34;2021-11-24\u0026#34;, \u0026#34;dokumentmedium\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;journalaar\u0026#34;: 2021, \u0026#34;journalsekvensnummer\u0026#34;: 5, \u0026#34;journalpostnummer\u0026#34;: 5, \u0026#34;journalansvarlig\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;journalansvarligBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;journalposttype\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;journalstatus\u0026#34;: \u0026#34;J\u0026#34;, \u0026#34;skjermKorrespondanseParterEInnsyn\u0026#34;: false }, \u0026#34;links\u0026#34;: { \u0026#34;refMappe\u0026#34;: 691 } }, \u0026#34;adresse-temp-id-1\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Adresse\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;967\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;2\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;7276dd75-d4aa-4b0c-956c-0ae31ee233b0\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-24T14:38:49.625+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;adresseKnr\u0026#34;: \u0026#34;0301\u0026#34;, \u0026#34;postnr\u0026#34;: \u0026#34;0301\u0026#34;, \u0026#34;poststed\u0026#34;: \u0026#34;Oslo\u0026#34;, \u0026#34;adressenavn\u0026#34;: \u0026#34;Rådhusplassen\u0026#34;, \u0026#34;nummer\u0026#34;: \u0026#34;1\u0026#34; }, \u0026#34;links\u0026#34;: { \u0026#34;refRegistrering\u0026#34;: 938 } } } }     "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/general/onboarding/",
	"title": "Onboarding",
	"tags": [],
	"description": "",
	"content": "Integration Team Documaster Integration Team is reachable at integration@documaster.com. This is the team that would support you in your integration effort and can be contacted for any issues or questions related to the Documaster Noark5 APIs.\nSetting up access Documaster supports a set of integration environments that a developer can be granted access to. Depending on the specific project and use cases, the setup process on Documaster side includes the following steps:\n client_id and client_secret, together with username and password for the integration user are setup on the integration servers and provided back to integration developers in a secure manner Documaster Archive integration instance endpoint is provide back to integration developers Any additional security measures required (VPN, 2-way TLS, etc.) coming as a specific requirement of the project are setup by Documaster team At least one Fonds (Arkiv) with a single Series (Arkivdel) is setup, to which the developers have access to.  Details of the Fonds and Series are provided back to developers   Integration user is assigned a particular Documaster Archive access group, which restricts access to certain functionality  Having all the details above, you can try to aquire an access token.\n If you would be using our Client SDKs, please take a look at the next section.\n Client SDKs    If you are using the Raw HTTP approach, you can proceed to Authentication and Authorization section.\n Authentication and Authorization  "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/general/clientsdk/",
	"title": "Client SDKs",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/general/authentication/",
	"title": "Authentication and Authorization",
	"tags": [],
	"description": "",
	"content": "Authentication Documaster Noark5 API is secured using OAuth2/OIC and more specifically the Resource Owner Passoword Grant. This is a standard flow part of the OAuth2 specification here https://datatracker.ietf.org/doc/html/rfc6749#section-4.3. This particular flow is used only in server-to-server integrations.\nEach integrating party should make sure the provided credentials as part of the onboarding process and kept secure on the integrating system server side. The credentials should never be embedded in any Web or mobile applications.\n OAuth2 scopes are not currently used to restrict access to the API, a single scope openid should be provided indicating that OIC capabilities should be enabled on the IDP side.\nAuthorization Documaster Archive has an internal security mechanism based on access groups. Access groups provide Read/Write/Update control over Noark5 entity model. As part of the project that the integration is implemented, specific permissions will be assigned to the integration access group and from there to the integration user.\nIDP Client SDKs Documaster provides IDP Client SDKs for both Java and .NET. Their code and samples can be found here:\n Java IDP Client SDK .NET IDP Client SDK  Aquire an Access Token Retrieving an access token and a related refresh token, a call to the IDP endpoint /oauth2/token should be made with the provided credentials part of the onboarding.\nHTTP parameters mapping    Field Location Value     Authorization Header    Content-Type Header fixed value of application/x-www-form-urlencoded   grant_type Body fixed value of password   username Body    password Body    scope Body fixed value of openid    HTTP Java C#   Request\nPOST https://v2-34-0.local.documaster.tech/idp/oauth2/token HTTP/1.1 ... Authorization: Basic {client_id:client_secret} Content-Type: application/x-www-form-urlencoded grant_type=password \u0026amp;username={username} \u0026amp;password={password} \u0026amp;scope=openid  Response\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;access_token\u0026#34;: \u0026#34;f295ace60f0a92808c496249a572a5784aa6af6f\u0026#34;, \u0026#34;expires_in\u0026#34;: 3600, \u0026#34;token_type\u0026#34;: \u0026#34;Bearer\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;openid\u0026#34;, \u0026#34;refresh_token\u0026#34;: \u0026#34;0a4a4f8633a8c9a289fca751e181eeaea5cd2455\u0026#34; }    Query by CaseYear and CaseSequenceNumber\n// client is an instance of NoarkClient  QueryResponse\u0026lt;Saksmappe\u0026gt; queryResults = client.query(Saksmappe.class, \u0026#34;saksaar = @caseYear \u0026amp;\u0026amp; sakssekvensnummer = @caseSequenceNumber\u0026#34;, 1) .addQueryParam(\u0026#34;@caseYear\u0026#34;, \u0026#34;2021\u0026#34;) .addQueryParam(\u0026#34;@caseSequenceNumber\u0026#34;, \u0026#34;6\u0026#34;) .execute(); if (!queryResults.getResults().isEmpty()) { Optional\u0026lt;Saksmappe\u0026gt; first = queryResults.getResults().stream().findFirst(); // ID of the first case file, assuming only one is returned  String caseFileID = first.get().getId(); }  Query Request by ExternalID\n// client is an instance of NoarkClient  QueryResponse\u0026lt;Saksmappe\u0026gt; queryResults = client.query(Saksmappe.class, \u0026#34;refEksternId.eksternID = @externalID\u0026#34;, 1) .addQueryParam(\u0026#34;@externalID\u0026#34;, \u0026#34;ISID:0000004572\u0026#34;) .execute(); if (!queryResults.getResults().isEmpty()) { Optional\u0026lt;Saksmappe\u0026gt; first = queryResults.getResults().stream().findFirst(); // ID of the first case file, assuming only one is returned  String caseFileID = first.get().getId(); }    Query by CaseYear and CaseSequenceNumber\n// client is an instance of NoarkClient  QueryResponse\u0026lt;Saksmappe\u0026gt; queryResults = client.query(Saksmappe.class, \u0026#34;saksaar = @caseYear \u0026amp;\u0026amp; sakssekvensnummer = @caseSequenceNumber\u0026#34;, 1) .addQueryParam(\u0026#34;@caseYear\u0026#34;, \u0026#34;2021\u0026#34;) .addQueryParam(\u0026#34;@caseSequenceNumber\u0026#34;, \u0026#34;6\u0026#34;) .execute(); if (!queryResults.getResults().isEmpty()) { Optional\u0026lt;Saksmappe\u0026gt; first = queryResults.getResults().stream().findFirst(); // ID of the first case file, assuming only one is returned  String caseFileID = first.get().getId(); }  Query Request by ExternalID\n// client is an instance of NoarkClient  QueryResponse\u0026lt;Saksmappe\u0026gt; queryResults = client.query(Saksmappe.class, \u0026#34;refEksternId.eksternID = @externalID\u0026#34;, 1) .addQueryParam(\u0026#34;@externalID\u0026#34;, \u0026#34;ISID:0000004572\u0026#34;) .execute(); if (!queryResults.getResults().isEmpty()) { Optional\u0026lt;Saksmappe\u0026gt; first = queryResults.getResults().stream().findFirst(); // ID of the first case file, assuming only one is returned  String caseFileID = first.get().getId(); }     "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractfolder/folder/",
	"title": "Basic Folder",
	"tags": [],
	"description": "",
	"content": "Mappe "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/fonds/",
	"title": "Fonds",
	"tags": [],
	"description": "",
	"content": "Arkiv "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/operations/transaction/",
	"title": "Transaction",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/fonds/fondscreator/",
	"title": "Fonds Creator",
	"tags": [],
	"description": "",
	"content": "Arkivskaper "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/classification/class/",
	"title": "Class",
	"tags": [],
	"description": "",
	"content": "Klasse "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/classification/",
	"title": "Classification System",
	"tags": [],
	"description": "",
	"content": "Klassifikasjonssystem "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/series/",
	"title": "Series",
	"tags": [],
	"description": "",
	"content": "Arkivdel "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/",
	"title": "Data Model",
	"tags": [],
	"description": "",
	"content": "Chapter 3 Content Find out how to create and organize your content quickly and intuitively.\n"
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractrecord/basicrecord/",
	"title": "Basic Record",
	"tags": [],
	"description": "",
	"content": "Basisregistrering "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/general/firstcontact/",
	"title": "First API Interaction",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/usage/perusecase/registryentryanddocument/",
	"title": "Create Registry Entry and Document",
	"tags": [],
	"description": "",
	"content": "Usecase Details Common usecase for an integrating system is to create a Registry Entry(Journalpost) and a single Document(Dokument) with a single DocumentVersion(Dokumentversjon) and an electronic document uploaded. The Registry Entry (Journalpost) is linked to an existing Case File (Saksmappe).\nAccomplishing this through the API is done following a set of steps outlined in the diagram below.\nAuthentication and Authorization (1, 2) Aquiring an OAuth2 access token is done through the configured Identity Provider (IDP) used by the customer. Details on how to get the access token, how it should be cached and renewed can be found in Authentication and Authorization section of the documentation.\nRetrieve existing Case File (3, 4, 5) Already created case files in the Documaster system can be found using the POST /query operation. Recommended case files query criteria would be the case year and sequence number (saksaar and sakssekvensnummer) or an externalID (through refExternId).\nExamples below retrieve a case with externalID : ISID:0000004572, case year : 2021 and sequence number : 6.\nHTTP Java   Query Request by CaseYear and CaseSequenceNumber\nPOST https://v2-34-0.local.documaster.tech:8083/rms/api/public/noark5/v1/query HTTP/1.1 ... Authorization: Bearer {{accessTokenIntegrator}} Content-Type: application/json X-Documaster-Error-Response-Type: application/json { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;limit\u0026#34;: 1, \u0026#34;query\u0026#34;: \u0026#34;saksaar = @caseYear \u0026amp;\u0026amp; sakssekvensnummer = @caseSequenceNumber\u0026#34;, \u0026#34;parameters\u0026#34; : { \u0026#34;@caseYear\u0026#34; : \u0026#34;2021\u0026#34;, \u0026#34;@caseSequenceNumber\u0026#34; : \u0026#34;6\u0026#34; } }  Query Request by ExternalID\nPOST https://v2-34-0.local.documaster.tech:8083/rms/api/public/noark5/v1/query HTTP/1.1 ... Authorization: Bearer {{accessTokenIntegrator}} Content-Type: application/json X-Documaster-Error-Response-Type: application/json { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;limit\u0026#34;: 1, \u0026#34;query\u0026#34;: \u0026#34;refEksternId.eksternID = @externalID\u0026#34;, \u0026#34;parameters\u0026#34; : { \u0026#34;@externalID\u0026#34; : \u0026#34;ISID:0000004572\u0026#34; } }  Response\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;hasMore\u0026#34;: false, \u0026#34;results\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Saksmappe\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;981\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;8\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;31b474d1-9474-4139-b1e6-2d0ffb77b2e0\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-25T13:51:10.494+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;mappeIdent\u0026#34;: \u0026#34;2021/6\u0026#34;, \u0026#34;tittel\u0026#34;: \u0026#34;API Created Case File\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;First API created Case File\u0026#34;, \u0026#34;dokumentmedium\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;saksaar\u0026#34;: 2021, \u0026#34;sakssekvensnummer\u0026#34;: 6, \u0026#34;saksdato\u0026#34;: \u0026#34;2021-11-25\u0026#34;, \u0026#34;administrativEnhet\u0026#34;: \u0026#34;AD1\u0026#34;, \u0026#34;saksansvarlig\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;saksansvarligBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;saksstatus\u0026#34;: \u0026#34;B\u0026#34; }, \u0026#34;links\u0026#34;: { \u0026#34;refPrimaerKlasse\u0026#34;: 681, \u0026#34;refArkivdel\u0026#34;: 688 } } ] }    Query by CaseYear and CaseSequenceNumber\n// client is an instance of NoarkClient  QueryResponse\u0026lt;Saksmappe\u0026gt; queryResults = client.query(Saksmappe.class, \u0026#34;saksaar = @caseYear \u0026amp;\u0026amp; sakssekvensnummer = @caseSequenceNumber\u0026#34;, 1) .addQueryParam(\u0026#34;@caseYear\u0026#34;, \u0026#34;2021\u0026#34;) .addQueryParam(\u0026#34;@caseSequenceNumber\u0026#34;, \u0026#34;6\u0026#34;) .execute(); if (!queryResults.getResults().isEmpty()) { Optional\u0026lt;Saksmappe\u0026gt; first = queryResults.getResults().stream().findFirst(); // ID of the first case file, assuming only one is returned  String caseFileID = first.get().getId(); }  Query Request by ExternalID\n// client is an instance of NoarkClient  QueryResponse\u0026lt;Saksmappe\u0026gt; queryResults = client.query(Saksmappe.class, \u0026#34;refEksternId.eksternID = @externalID\u0026#34;, 1) .addQueryParam(\u0026#34;@externalID\u0026#34;, \u0026#34;ISID:0000004572\u0026#34;) .execute(); if (!queryResults.getResults().isEmpty()) { Optional\u0026lt;Saksmappe\u0026gt; first = queryResults.getResults().stream().findFirst(); // ID of the first case file, assuming only one is returned  String caseFileID = first.get().getId(); }     Important detail to be retrieved from the response is the ID of the existing case file - $.results[0].id in this case equal to 981. Client SDKs faciliate the extraction of the ID from the response as shown in the examples.\nCreating new RegistryEntry and linked Correspondence Party (6, 7, 8) Creating a new registry entry is described in details in this example, here it is provided for completenes. Bear in mind that the retrieved CaseFile ID (Saksmappe) should be used to link the newly created RegistryEntry to it. This is done (in the case of the raw HTTP API) through the element $.actions[1].linkToId as can be seen below.\nHTTP   Request\nPOST https://v2-34-0.local.documaster.tech:8083/rms/api/public/noark5/v1/transaction HTTP/1.1 ... Authorization: Bearer {{accessTokenIntegrator}} Content-Type: application/json X-Documaster-Error-Response-Type: application/json { \u0026#34;actions\u0026#34;: [ { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;journalpost-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;tittel\u0026#34;: \u0026#34;API Created Registry Entry\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Registry Entry Description\u0026#34;, \u0026#34;journalposttype\u0026#34;: \u0026#34;U\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;journalpost-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refMappe\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;981\u0026#34; }, { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;korrespondansepart-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;korrespondanseparttype\u0026#34;: \u0026#34;EA\u0026#34;, \u0026#34;korrespondansepartNavn\u0026#34;: \u0026#34;Correspondence Party Name\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;korrespondansepart-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refRegistrering\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;journalpost-temp-id-1\u0026#34; } ] }  Response\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;saved\u0026#34;: { \u0026#34;journalpost-temp-id-1\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;994\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;8\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;cf7eb80b-5c58-4418-b3e5-fb09c978e794\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-25T14:18:55.674+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;registreringsIdent\u0026#34;: \u0026#34;2021/9\u0026#34;, \u0026#34;tittel\u0026#34;: \u0026#34;API Created Registry Entry\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Registry Entry Description\u0026#34;, \u0026#34;registreringsDato\u0026#34;: \u0026#34;2021-11-25T14:18:55.714+0100\u0026#34;, \u0026#34;dokumentmedium\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;journalaar\u0026#34;: 2021, \u0026#34;journalsekvensnummer\u0026#34;: 9, \u0026#34;journalpostnummer\u0026#34;: 1, \u0026#34;journalansvarlig\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;journalansvarligBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;journalposttype\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;journalstatus\u0026#34;: \u0026#34;J\u0026#34;, \u0026#34;skjermKorrespondanseParterEInnsyn\u0026#34;: false }, \u0026#34;links\u0026#34;: { \u0026#34;refMappe\u0026#34;: 981 } }, \u0026#34;korrespondansepart-temp-id-1\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;995\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;3\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;ff3ec7de-6451-4347-88e2-0b81de6f1b75\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-25T14:18:55.718+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;korrespondanseparttype\u0026#34;: \u0026#34;EA\u0026#34;, \u0026#34;korrespondansepartNavn\u0026#34;: \u0026#34;Correspondence Party Name\u0026#34; }, \u0026#34;links\u0026#34;: { \u0026#34;refRegistrering\u0026#34;: 994 } } } }     Upload an electronic document (9, 10, 11) Uploading a document is done using the POST /upload operation. The file content is streamed in the API request and as a result the API returns a new unique identifier of this electronic document. The document is deleted from Documaster Archive in case it is not linked for a certain period of time to a DocumentVersion (Documentverjion) and from there to a Document (Dokument).\nThe ID of the electronic document is not the same ID as the one of the Document (Dokument) entity objects. Document (Dokument) entity object is metadata describing the document, while the ID returned as a result of this operation identfies the actually uploaded document.\n HTTP   Request\nPOST https://v2-34-0.local.documaster.tech:8083/rms/api/public/noark5/v1/upload HTTP/1.1 ... Authorization: Bearer {{accessTokenIntegrator}} Content-Disposition: attachment; filename=\u0026#34;sample-document.pdf\u0026#34;; filename*=utf-8\u0026#39;\u0026#39;sample-document.pdf Content-Type: application/octet-stream ... binary file content ...  Response\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;id\u0026#34;:\u0026#34;999\u0026#34; }     ID of the electronic document is extracted from $.id of the response.\nCreating a Document and DocumentVersion and link them to RegistryEntry (12, 13) As a final set of steps to be executed as part of this use case, a Document (Dokument) and DocumentVersion (Dokumentversjion) should be created. The electronic document ID, created in the previous step is now used in the creation of the DocumentVersion(Dokumentversjion) through the field $.actions[?(@.action == 'save' \u0026amp;\u0026amp; @.type=='Dokumentversjon')].fields.referanseDokumentfil, which is a field of DocumentVersion.\nHTTP   Request\nPOST https://v2-34-0.local.documaster.tech:8083/rms/api/public/noark5/v1/transaction HTTP/1.1 ... Authorization: Bearer {{accessTokenIntegrator}} Content-Type: application/json X-Documaster-Error-Response-Type: application/json { \u0026#34;actions\u0026#34;: [ { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;dokument-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;tittel\u0026#34;: \u0026#34;sample-document.pdf\u0026#34;, \u0026#34;tilknyttetRegistreringSom\u0026#34;: \u0026#34;V\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;dokument-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refRegistrering\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;994\u0026#34; }, { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Dokumentversjon\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;dokumentversjon-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;format\u0026#34;: \u0026#34;pdf\u0026#34;, \u0026#34;referanseDokumentfil\u0026#34;: \u0026#34;1079\u0026#34;, \u0026#34;variantformat\u0026#34;: \u0026#34;P\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Dokumentversjon\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;dokumentversjon-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refDokument\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;dokument-temp-id-1\u0026#34; } ] }  Response\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;saved\u0026#34;: { \u0026#34;dokument-temp-id-1\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Dokument\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;1081\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;7\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;8775e127-29ad-48de-a549-7a0c75ab0bd2\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-25T14:58:35.242+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;dokumentstatus\u0026#34;: \u0026#34;B\u0026#34;, \u0026#34;tittel\u0026#34;: \u0026#34;sample-document.pdf\u0026#34;, \u0026#34;dokumentmedium\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;tilknyttetRegistreringSom\u0026#34;: \u0026#34;V\u0026#34;, \u0026#34;dokumentnummer\u0026#34;: 2 }, \u0026#34;links\u0026#34;: { \u0026#34;refRegistrering\u0026#34;: 994 } }, \u0026#34;dokumentversjon-temp-id-1\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Dokumentversjon\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;1082\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;5\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;f20796a3-3550-4c87-85dd-36bc18cc65f7\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-25T14:58:35.250+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;versjonsnummer\u0026#34;: 1, \u0026#34;variantformat\u0026#34;: \u0026#34;P\u0026#34;, \u0026#34;format\u0026#34;: \u0026#34;pdf\u0026#34;, \u0026#34;kryptertDokument\u0026#34;: false, \u0026#34;sjekksum\u0026#34;: \u0026#34;59844ce7572b1411445179c25e4182e328e43391d733782828277f22e340166b\u0026#34;, \u0026#34;sjekksumAlgoritme\u0026#34;: \u0026#34;SHA-256\u0026#34;, \u0026#34;filstoerrelse\u0026#34;: 3191, \u0026#34;filnavn\u0026#34;: \u0026#34;sample-document.pdf\u0026#34;, \u0026#34;referanseDokumentfil\u0026#34;: \u0026#34;1079\u0026#34;, \u0026#34;innholdstype\u0026#34;: \u0026#34;application/pdf\u0026#34; }, \u0026#34;links\u0026#34;: { \u0026#34;refDokument\u0026#34;: 1081 } } } }     "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/usage/",
	"title": "Examples",
	"tags": [],
	"description": "",
	"content": "Chapter 4 Content Find out how to create and organize your content quickly and intuitively.\n"
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/usage/perentity/",
	"title": "Per Entity",
	"tags": [],
	"description": "",
	"content": "Examples per entity "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/usage/perusecase/",
	"title": "Per Usecase",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/usage/perentity/registryentry/",
	"title": "Registry Entry",
	"tags": [],
	"description": "",
	"content": "Creating Registry Entry Registry entries are created using transaction API, where in a single transaction the newly created registry entry should be linked to a case file (Saksmappe) or a basic folder (Mappe). Bear in mind that the registry entry can be under only one folder. Newly created registry entry requires at least one correspondence party (Korrespondansepart) to be created and associated with the registry entry. The link is done using transaction::link action following the guidelines to use newly created entry reference field to parent entry (Korrespondansepart::refRegistrering), rather than parent entry reference field (Journalpost::refKorrespondansepart). Take a look at the Fields section of this document for details about the mandatory/optional fields for registry entries.\nDocument (Dokument) entities are associated to Registry entries during documents creation. Examples how a document is created and associated to a registry entry can be found here.\n Correspondence Party Entity Document Entity Document Version Entity  HTTP   Request\nPOST https://v2-34-0.local.documaster.tech:8083/rms/api/public/noark5/v1/transaction HTTP/1.1 ... Authorization: Bearer {{accessTokenIntegrator}} Content-Type: application/json X-Documaster-Error-Response-Type: application/json { \u0026#34;actions\u0026#34;: [ { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;journalpost-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;tittel\u0026#34;: \u0026#34;API Created Registry Entry\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Registry Entry Description\u0026#34;, \u0026#34;journalposttype\u0026#34;: \u0026#34;U\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;journalpost-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refMappe\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;691\u0026#34; }, { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;korrespondansepart-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;korrespondanseparttype\u0026#34;: \u0026#34;EA\u0026#34;, \u0026#34;korrespondansepartNavn\u0026#34;: \u0026#34;Correspondence Party Name\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;korrespondansepart-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refRegistrering\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;journalpost-temp-id-1\u0026#34; } ] }  Response\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;saved\u0026#34;: { \u0026#34;journalpost-temp-id-1\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;938\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;8\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;35926f91-96d2-40d7-961e-9ffb368673af\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-24T14:14:05.933+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;registreringsIdent\u0026#34;: \u0026#34;2021/5\u0026#34;, \u0026#34;tittel\u0026#34;: \u0026#34;API Created Registry Entry\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Registry Entry Description\u0026#34;, \u0026#34;registreringsDato\u0026#34;: \u0026#34;2021-11-24T14:14:05.950+0100\u0026#34;, \u0026#34;dokumentmedium\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;journalaar\u0026#34;: 2021, \u0026#34;journalsekvensnummer\u0026#34;: 5, \u0026#34;journalpostnummer\u0026#34;: 5, \u0026#34;journalansvarlig\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;journalansvarligBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;journalposttype\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;journalstatus\u0026#34;: \u0026#34;J\u0026#34;, \u0026#34;skjermKorrespondanseParterEInnsyn\u0026#34;: false }, \u0026#34;links\u0026#34;: { \u0026#34;refMappe\u0026#34;: 691 } }, \u0026#34;korrespondansepart-temp-id-1\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Korrespondansepart\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;939\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;3\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;3f7bad64-9560-45d2-82a5-4e5fb06a5c13\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-24T14:14:05.953+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;korrespondanseparttype\u0026#34;: \u0026#34;EA\u0026#34;, \u0026#34;korrespondansepartNavn\u0026#34;: \u0026#34;Correspondence Party Name\u0026#34; }, \u0026#34;links\u0026#34;: { \u0026#34;refRegistrering\u0026#34;: 938 } } } }     Update Registry Entry Updating a registry entry is done through transaction::save action in the same way it is used to create it, with the difference that the actual id of the registry entry should be used (returned in create call response in $.saved.{tempIDofRegistryEntry}.id). The example below show an update of the registry entry (chaning the description) and linking a new Address (Adresse).\nHTTP   Request\nPOST https://v2-34-0.local.documaster.tech:8083/rms/api/public/noark5/v1/transaction HTTP/1.1 ... Authorization: Bearer {{accessTokenIntegrator}} Content-Type: application/json X-Documaster-Error-Response-Type: application/json { \u0026#34;actions\u0026#34;: [ { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;938\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;beskrivelse\u0026#34;: \u0026#34;Updated Registry Entry Description\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;save\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Adresse\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;adresse-temp-id-1\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;adresseKnr\u0026#34;: \u0026#34;0301\u0026#34;, \u0026#34;postnr\u0026#34;: \u0026#34;0301\u0026#34;, \u0026#34;poststed\u0026#34;: \u0026#34;Oslo\u0026#34;, \u0026#34;adressenavn\u0026#34;: \u0026#34;Rådhusplassen\u0026#34;, \u0026#34;nummer\u0026#34;: \u0026#34;1\u0026#34; } }, { \u0026#34;action\u0026#34;: \u0026#34;link\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Adresse\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;adresse-temp-id-1\u0026#34;, \u0026#34;ref\u0026#34;: \u0026#34;refRegistrering\u0026#34;, \u0026#34;linkToId\u0026#34;: \u0026#34;938\u0026#34; } ] }  Response\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;saved\u0026#34;: { \u0026#34;938\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Journalpost\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;938\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;9\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;35926f91-96d2-40d7-961e-9ffb368673af\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-24T14:14:05.933+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;registreringsIdent\u0026#34;: \u0026#34;2021/5\u0026#34;, \u0026#34;tittel\u0026#34;: \u0026#34;API Created Registry Entry\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Updated Registry Entry Description\u0026#34;, \u0026#34;registreringsDato\u0026#34;: \u0026#34;2021-11-24\u0026#34;, \u0026#34;dokumentmedium\u0026#34;: \u0026#34;E\u0026#34;, \u0026#34;journalaar\u0026#34;: 2021, \u0026#34;journalsekvensnummer\u0026#34;: 5, \u0026#34;journalpostnummer\u0026#34;: 5, \u0026#34;journalansvarlig\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;journalansvarligBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;journalposttype\u0026#34;: \u0026#34;U\u0026#34;, \u0026#34;journalstatus\u0026#34;: \u0026#34;J\u0026#34;, \u0026#34;skjermKorrespondanseParterEInnsyn\u0026#34;: false }, \u0026#34;links\u0026#34;: { \u0026#34;refMappe\u0026#34;: 691 } }, \u0026#34;adresse-temp-id-1\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;Adresse\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;967\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;2\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;uuid\u0026#34;: \u0026#34;7276dd75-d4aa-4b0c-956c-0ae31ee233b0\u0026#34;, \u0026#34;opprettetDato\u0026#34;: \u0026#34;2021-11-24T14:38:49.625+0100\u0026#34;, \u0026#34;opprettetAv\u0026#34;: \u0026#34;External Integrator ACME\u0026#34;, \u0026#34;opprettetAvBrukerIdent\u0026#34;: \u0026#34;e6e6318e-fdcb-41cb-ae3a-1940f98ea153\u0026#34;, \u0026#34;adresseKnr\u0026#34;: \u0026#34;0301\u0026#34;, \u0026#34;postnr\u0026#34;: \u0026#34;0301\u0026#34;, \u0026#34;poststed\u0026#34;: \u0026#34;Oslo\u0026#34;, \u0026#34;adressenavn\u0026#34;: \u0026#34;Rådhusplassen\u0026#34;, \u0026#34;nummer\u0026#34;: \u0026#34;1\u0026#34; }, \u0026#34;links\u0026#34;: { \u0026#34;refRegistrering\u0026#34;: 938 } } } }     "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/",
	"title": "Core Entities",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractfolder/",
	"title": "Folders",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractfolder/meetingfolder/",
	"title": "Meeting Folder",
	"tags": [],
	"description": "",
	"content": "Moetemappe "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractfolder/meetingfolder/meetingparticipant/",
	"title": "Meeting Participant",
	"tags": [],
	"description": "",
	"content": "Moetedeltaker "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractrecord/meetingrecord/",
	"title": "Meeting Record",
	"tags": [],
	"description": "",
	"content": "WIP "
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/model/entities/abstractrecord/",
	"title": "Records",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/operations/query/",
	"title": "Query",
	"tags": ["documentation", "tutorial"],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/tags/documentation/",
	"title": "documentation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/tags/tutorial/",
	"title": "tutorial",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://myakimov.github.io/documaster-api-docs/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
}]